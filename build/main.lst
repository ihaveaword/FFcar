ARM GAS  /var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccXJY3qx.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.file 1 "Core/Src/main.c"
  19              		.section	.data.blinkInterval,"aw"
  20              		.align	2
  23              	blinkInterval:
  24 0000 E8030000 		.word	1000
  25              		.section	.text.main,"ax",%progbits
  26              		.align	1
  27              		.global	main
  28              		.syntax unified
  29              		.thumb
  30              		.thumb_func
  32              	main:
  33              	.LFB144:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "memorymap.h"
  22:Core/Src/main.c **** #include "gpio.h"
  23:Core/Src/main.c **** 
  24:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  25:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* USER CODE END Includes */
ARM GAS  /var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccXJY3qx.s 			page 2


  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  30:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* USER CODE END PTD */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  35:Core/Src/main.c **** /* USER CODE BEGIN PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* USER CODE END PD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* USER CODE END PM */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  45:Core/Src/main.c **** /* USER CODE BEGIN PV */
  46:Core/Src/main.c **** static uint32_t blinkInterval = 1000; // Blink interval in milliseconds
  47:Core/Src/main.c **** /* USER CODE END PV */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  50:Core/Src/main.c **** void SystemClock_Config(void);
  51:Core/Src/main.c **** static void MPU_Config(void);
  52:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* USER CODE END PFP */
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  57:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* USER CODE END 0 */
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /**
  62:Core/Src/main.c ****   * @brief  The application entry point.
  63:Core/Src/main.c ****   * @retval int
  64:Core/Src/main.c ****   */
  65:Core/Src/main.c **** int main(void)
  66:Core/Src/main.c **** {
  34              		.loc 1 66 1
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 0
  37              		@ frame_needed = 1, uses_anonymous_args = 0
  38 0000 80B5     		push	{r7, lr}
  39              	.LCFI0:
  40              		.cfi_def_cfa_offset 8
  41              		.cfi_offset 7, -8
  42              		.cfi_offset 14, -4
  43 0002 00AF     		add	r7, sp, #0
  44              	.LCFI1:
  45              		.cfi_def_cfa_register 7
  67:Core/Src/main.c **** 
  68:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c ****   /* USER CODE END 1 */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c ****   /* MPU Configuration--------------------------------------------------------*/
ARM GAS  /var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccXJY3qx.s 			page 3


  73:Core/Src/main.c ****   MPU_Config();
  46              		.loc 1 73 3
  47 0004 FFF7FEFF 		bl	MPU_Config
  74:Core/Src/main.c **** 
  75:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  78:Core/Src/main.c ****   HAL_Init();
  48              		.loc 1 78 3
  49 0008 FFF7FEFF 		bl	HAL_Init
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* USER CODE END Init */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* Configure the system clock */
  85:Core/Src/main.c ****   SystemClock_Config();
  50              		.loc 1 85 3
  51 000c FFF7FEFF 		bl	SystemClock_Config
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****   /* USER CODE END SysInit */
  90:Core/Src/main.c **** 
  91:Core/Src/main.c ****   /* Initialize all configured peripherals */
  92:Core/Src/main.c ****   MX_GPIO_Init();
  52              		.loc 1 92 3
  53 0010 FFF7FEFF 		bl	MX_GPIO_Init
  54              	.L2:
  93:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* USER CODE END 2 */
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* Infinite loop */
  98:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
  99:Core/Src/main.c ****   while (1)
 100:Core/Src/main.c ****   {
 101:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOC,GPIO_PIN_1,GPIO_PIN_RESET); // Turn on LED
  55              		.loc 1 101 5
  56 0014 0022     		movs	r2, #0
  57 0016 0221     		movs	r1, #2
  58 0018 0948     		ldr	r0, .L3
  59 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
 102:Core/Src/main.c ****     HAL_Delay(blinkInterval); // Wait for the specified interval
  60              		.loc 1 102 5
  61 001e 094B     		ldr	r3, .L3+4
  62 0020 1B68     		ldr	r3, [r3]
  63 0022 1846     		mov	r0, r3
  64 0024 FFF7FEFF 		bl	HAL_Delay
 103:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOC,GPIO_PIN_1,GPIO_PIN_SET); // Turn off LED
  65              		.loc 1 103 5
  66 0028 0122     		movs	r2, #1
  67 002a 0221     		movs	r1, #2
  68 002c 0448     		ldr	r0, .L3
  69 002e FFF7FEFF 		bl	HAL_GPIO_WritePin
 104:Core/Src/main.c ****     HAL_Delay(blinkInterval); // Wait for the specified interval
  70              		.loc 1 104 5 discriminator 1
ARM GAS  /var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccXJY3qx.s 			page 4


  71 0032 044B     		ldr	r3, .L3+4
  72 0034 1B68     		ldr	r3, [r3]
  73 0036 1846     		mov	r0, r3
  74 0038 FFF7FEFF 		bl	HAL_Delay
 101:Core/Src/main.c ****     HAL_Delay(blinkInterval); // Wait for the specified interval
  75              		.loc 1 101 5
  76 003c 00BF     		nop
  77 003e E9E7     		b	.L2
  78              	.L4:
  79              		.align	2
  80              	.L3:
  81 0040 00080258 		.word	1476528128
  82 0044 00000000 		.word	blinkInterval
  83              		.cfi_endproc
  84              	.LFE144:
  86              		.section	.text.SystemClock_Config,"ax",%progbits
  87              		.align	1
  88              		.global	SystemClock_Config
  89              		.syntax unified
  90              		.thumb
  91              		.thumb_func
  93              	SystemClock_Config:
  94              	.LFB145:
 105:Core/Src/main.c ****     
 106:Core/Src/main.c ****     /* USER CODE END WHILE */
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 109:Core/Src/main.c ****   }
 110:Core/Src/main.c ****   /* USER CODE END 3 */
 111:Core/Src/main.c **** }
 112:Core/Src/main.c **** 
 113:Core/Src/main.c **** /**
 114:Core/Src/main.c ****   * @brief System Clock Configuration
 115:Core/Src/main.c ****   * @retval None
 116:Core/Src/main.c ****   */
 117:Core/Src/main.c **** void SystemClock_Config(void)
 118:Core/Src/main.c **** {
  95              		.loc 1 118 1
  96              		.cfi_startproc
  97              		@ args = 0, pretend = 0, frame = 112
  98              		@ frame_needed = 1, uses_anonymous_args = 0
  99 0000 80B5     		push	{r7, lr}
 100              	.LCFI2:
 101              		.cfi_def_cfa_offset 8
 102              		.cfi_offset 7, -8
 103              		.cfi_offset 14, -4
 104 0002 9CB0     		sub	sp, sp, #112
 105              	.LCFI3:
 106              		.cfi_def_cfa_offset 120
 107 0004 00AF     		add	r7, sp, #0
 108              	.LCFI4:
 109              		.cfi_def_cfa_register 7
 119:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 110              		.loc 1 119 22
 111 0006 07F12403 		add	r3, r7, #36
 112 000a 4C22     		movs	r2, #76
 113 000c 0021     		movs	r1, #0
ARM GAS  /var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccXJY3qx.s 			page 5


 114 000e 1846     		mov	r0, r3
 115 0010 FFF7FEFF 		bl	memset
 120:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 116              		.loc 1 120 22
 117 0014 3B1D     		adds	r3, r7, #4
 118 0016 2022     		movs	r2, #32
 119 0018 0021     		movs	r1, #0
 120 001a 1846     		mov	r0, r3
 121 001c FFF7FEFF 		bl	memset
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****   /** Supply configuration update enable
 123:Core/Src/main.c ****   */
 124:Core/Src/main.c ****   HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY);
 122              		.loc 1 124 3
 123 0020 0220     		movs	r0, #2
 124 0022 FFF7FEFF 		bl	HAL_PWREx_ConfigSupply
 125              	.LBB4:
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 127:Core/Src/main.c ****   */
 128:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 126              		.loc 1 128 3
 127 0026 0023     		movs	r3, #0
 128 0028 3B60     		str	r3, [r7]
 129              		.loc 1 128 3 is_stmt 0 discriminator 2
 130 002a 284B     		ldr	r3, .L10
 131 002c DB6A     		ldr	r3, [r3, #44]
 132 002e 274A     		ldr	r2, .L10
 133 0030 23F00103 		bic	r3, r3, #1
 134 0034 D362     		str	r3, [r2, #44]
 135 0036 254B     		ldr	r3, .L10
 136 0038 DB6A     		ldr	r3, [r3, #44]
 137 003a 03F00103 		and	r3, r3, #1
 138 003e 3B60     		str	r3, [r7]
 139 0040 234B     		ldr	r3, .L10+4
 140 0042 9B69     		ldr	r3, [r3, #24]
 141 0044 23F44043 		bic	r3, r3, #49152
 142 0048 214A     		ldr	r2, .L10+4
 143 004a 43F48043 		orr	r3, r3, #16384
 144 004e 9361     		str	r3, [r2, #24]
 145 0050 1F4B     		ldr	r3, .L10+4
 146 0052 9B69     		ldr	r3, [r3, #24]
 147 0054 03F44043 		and	r3, r3, #49152
 148 0058 3B60     		str	r3, [r7]
 149              		.loc 1 128 3 discriminator 4
 150 005a 3B68     		ldr	r3, [r7]
 151              	.LBE4:
 129:Core/Src/main.c **** 
 130:Core/Src/main.c ****   while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
 152              		.loc 1 130 8 is_stmt 1
 153 005c 00BF     		nop
 154              	.L6:
 155              		.loc 1 130 10 discriminator 1
 156 005e 1C4B     		ldr	r3, .L10+4
 157 0060 9B69     		ldr	r3, [r3, #24]
 158 0062 03F40053 		and	r3, r3, #8192
 159              		.loc 1 130 9 discriminator 1
ARM GAS  /var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccXJY3qx.s 			page 6


 160 0066 B3F5005F 		cmp	r3, #8192
 161 006a F8D1     		bne	.L6
 131:Core/Src/main.c **** 
 132:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 133:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 134:Core/Src/main.c ****   */
 135:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 162              		.loc 1 135 36
 163 006c 0223     		movs	r3, #2
 164 006e 7B62     		str	r3, [r7, #36]
 136:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_DIV1;
 165              		.loc 1 136 30
 166 0070 0123     		movs	r3, #1
 167 0072 3B63     		str	r3, [r7, #48]
 137:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 168              		.loc 1 137 41
 169 0074 4023     		movs	r3, #64
 170 0076 7B63     		str	r3, [r7, #52]
 138:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 171              		.loc 1 138 34
 172 0078 0023     		movs	r3, #0
 173 007a BB64     		str	r3, [r7, #72]
 139:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 174              		.loc 1 139 7
 175 007c 07F12403 		add	r3, r7, #36
 176 0080 1846     		mov	r0, r3
 177 0082 FFF7FEFF 		bl	HAL_RCC_OscConfig
 178 0086 0346     		mov	r3, r0
 179              		.loc 1 139 6 discriminator 1
 180 0088 002B     		cmp	r3, #0
 181 008a 01D0     		beq	.L7
 140:Core/Src/main.c ****   {
 141:Core/Src/main.c ****     Error_Handler();
 182              		.loc 1 141 5
 183 008c FFF7FEFF 		bl	Error_Handler
 184              	.L7:
 142:Core/Src/main.c ****   }
 143:Core/Src/main.c **** 
 144:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 145:Core/Src/main.c ****   */
 146:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 185              		.loc 1 146 31
 186 0090 3F23     		movs	r3, #63
 187 0092 7B60     		str	r3, [r7, #4]
 147:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
 148:Core/Src/main.c ****                               |RCC_CLOCKTYPE_D3PCLK1|RCC_CLOCKTYPE_D1PCLK1;
 149:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 188              		.loc 1 149 34
 189 0094 0023     		movs	r3, #0
 190 0096 BB60     		str	r3, [r7, #8]
 150:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 191              		.loc 1 150 35
 192 0098 0023     		movs	r3, #0
 193 009a FB60     		str	r3, [r7, #12]
 151:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV1;
 194              		.loc 1 151 35
 195 009c 0023     		movs	r3, #0
ARM GAS  /var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccXJY3qx.s 			page 7


 196 009e 3B61     		str	r3, [r7, #16]
 152:Core/Src/main.c ****   RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV1;
 197              		.loc 1 152 36
 198 00a0 0023     		movs	r3, #0
 199 00a2 7B61     		str	r3, [r7, #20]
 153:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV1;
 200              		.loc 1 153 36
 201 00a4 0023     		movs	r3, #0
 202 00a6 BB61     		str	r3, [r7, #24]
 154:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV1;
 203              		.loc 1 154 36
 204 00a8 0023     		movs	r3, #0
 205 00aa FB61     		str	r3, [r7, #28]
 155:Core/Src/main.c ****   RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV1;
 206              		.loc 1 155 36
 207 00ac 0023     		movs	r3, #0
 208 00ae 3B62     		str	r3, [r7, #32]
 156:Core/Src/main.c **** 
 157:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 209              		.loc 1 157 7
 210 00b0 3B1D     		adds	r3, r7, #4
 211 00b2 0121     		movs	r1, #1
 212 00b4 1846     		mov	r0, r3
 213 00b6 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 214 00ba 0346     		mov	r3, r0
 215              		.loc 1 157 6 discriminator 1
 216 00bc 002B     		cmp	r3, #0
 217 00be 01D0     		beq	.L9
 158:Core/Src/main.c ****   {
 159:Core/Src/main.c ****     Error_Handler();
 218              		.loc 1 159 5
 219 00c0 FFF7FEFF 		bl	Error_Handler
 220              	.L9:
 160:Core/Src/main.c ****   }
 161:Core/Src/main.c **** }
 221              		.loc 1 161 1
 222 00c4 00BF     		nop
 223 00c6 7037     		adds	r7, r7, #112
 224              	.LCFI5:
 225              		.cfi_def_cfa_offset 8
 226 00c8 BD46     		mov	sp, r7
 227              	.LCFI6:
 228              		.cfi_def_cfa_register 13
 229              		@ sp needed
 230 00ca 80BD     		pop	{r7, pc}
 231              	.L11:
 232              		.align	2
 233              	.L10:
 234 00cc 00040058 		.word	1476396032
 235 00d0 00480258 		.word	1476544512
 236              		.cfi_endproc
 237              	.LFE145:
 239              		.section	.text.MPU_Config,"ax",%progbits
 240              		.align	1
 241              		.syntax unified
 242              		.thumb
 243              		.thumb_func
ARM GAS  /var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccXJY3qx.s 			page 8


 245              	MPU_Config:
 246              	.LFB146:
 162:Core/Src/main.c **** 
 163:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 164:Core/Src/main.c **** 
 165:Core/Src/main.c **** /* USER CODE END 4 */
 166:Core/Src/main.c **** 
 167:Core/Src/main.c ****  /* MPU Configuration */
 168:Core/Src/main.c **** 
 169:Core/Src/main.c **** void MPU_Config(void)
 170:Core/Src/main.c **** {
 247              		.loc 1 170 1
 248              		.cfi_startproc
 249              		@ args = 0, pretend = 0, frame = 16
 250              		@ frame_needed = 1, uses_anonymous_args = 0
 251 0000 80B5     		push	{r7, lr}
 252              	.LCFI7:
 253              		.cfi_def_cfa_offset 8
 254              		.cfi_offset 7, -8
 255              		.cfi_offset 14, -4
 256 0002 84B0     		sub	sp, sp, #16
 257              	.LCFI8:
 258              		.cfi_def_cfa_offset 24
 259 0004 00AF     		add	r7, sp, #0
 260              	.LCFI9:
 261              		.cfi_def_cfa_register 7
 171:Core/Src/main.c ****   MPU_Region_InitTypeDef MPU_InitStruct = {0};
 262              		.loc 1 171 26
 263 0006 3B46     		mov	r3, r7
 264 0008 0022     		movs	r2, #0
 265 000a 1A60     		str	r2, [r3]
 266 000c 5A60     		str	r2, [r3, #4]
 267 000e 9A60     		str	r2, [r3, #8]
 268 0010 DA60     		str	r2, [r3, #12]
 172:Core/Src/main.c **** 
 173:Core/Src/main.c ****   /* Disables the MPU */
 174:Core/Src/main.c ****   HAL_MPU_Disable();
 269              		.loc 1 174 3
 270 0012 FFF7FEFF 		bl	HAL_MPU_Disable
 175:Core/Src/main.c **** 
 176:Core/Src/main.c ****   /** Initializes and configures the Region and the memory to be protected
 177:Core/Src/main.c ****   */
 178:Core/Src/main.c ****   MPU_InitStruct.Enable = MPU_REGION_ENABLE;
 271              		.loc 1 178 25
 272 0016 0123     		movs	r3, #1
 273 0018 3B70     		strb	r3, [r7]
 179:Core/Src/main.c ****   MPU_InitStruct.Number = MPU_REGION_NUMBER0;
 274              		.loc 1 179 25
 275 001a 0023     		movs	r3, #0
 276 001c 7B70     		strb	r3, [r7, #1]
 180:Core/Src/main.c ****   MPU_InitStruct.BaseAddress = 0x0;
 277              		.loc 1 180 30
 278 001e 0023     		movs	r3, #0
 279 0020 7B60     		str	r3, [r7, #4]
 181:Core/Src/main.c ****   MPU_InitStruct.Size = MPU_REGION_SIZE_4GB;
 280              		.loc 1 181 23
 281 0022 1F23     		movs	r3, #31
ARM GAS  /var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccXJY3qx.s 			page 9


 282 0024 3B72     		strb	r3, [r7, #8]
 182:Core/Src/main.c ****   MPU_InitStruct.SubRegionDisable = 0x87;
 283              		.loc 1 182 35
 284 0026 8723     		movs	r3, #135
 285 0028 7B72     		strb	r3, [r7, #9]
 183:Core/Src/main.c ****   MPU_InitStruct.TypeExtField = MPU_TEX_LEVEL0;
 286              		.loc 1 183 31
 287 002a 0023     		movs	r3, #0
 288 002c BB72     		strb	r3, [r7, #10]
 184:Core/Src/main.c ****   MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
 289              		.loc 1 184 35
 290 002e 0023     		movs	r3, #0
 291 0030 FB72     		strb	r3, [r7, #11]
 185:Core/Src/main.c ****   MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_DISABLE;
 292              		.loc 1 185 30
 293 0032 0123     		movs	r3, #1
 294 0034 3B73     		strb	r3, [r7, #12]
 186:Core/Src/main.c ****   MPU_InitStruct.IsShareable = MPU_ACCESS_SHAREABLE;
 295              		.loc 1 186 30
 296 0036 0123     		movs	r3, #1
 297 0038 7B73     		strb	r3, [r7, #13]
 187:Core/Src/main.c ****   MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
 298              		.loc 1 187 30
 299 003a 0023     		movs	r3, #0
 300 003c BB73     		strb	r3, [r7, #14]
 188:Core/Src/main.c ****   MPU_InitStruct.IsBufferable = MPU_ACCESS_NOT_BUFFERABLE;
 301              		.loc 1 188 31
 302 003e 0023     		movs	r3, #0
 303 0040 FB73     		strb	r3, [r7, #15]
 189:Core/Src/main.c **** 
 190:Core/Src/main.c ****   HAL_MPU_ConfigRegion(&MPU_InitStruct);
 304              		.loc 1 190 3
 305 0042 3B46     		mov	r3, r7
 306 0044 1846     		mov	r0, r3
 307 0046 FFF7FEFF 		bl	HAL_MPU_ConfigRegion
 191:Core/Src/main.c ****   /* Enables the MPU */
 192:Core/Src/main.c ****   HAL_MPU_Enable(MPU_PRIVILEGED_DEFAULT);
 308              		.loc 1 192 3
 309 004a 0420     		movs	r0, #4
 310 004c FFF7FEFF 		bl	HAL_MPU_Enable
 193:Core/Src/main.c **** 
 194:Core/Src/main.c **** }
 311              		.loc 1 194 1
 312 0050 00BF     		nop
 313 0052 1037     		adds	r7, r7, #16
 314              	.LCFI10:
 315              		.cfi_def_cfa_offset 8
 316 0054 BD46     		mov	sp, r7
 317              	.LCFI11:
 318              		.cfi_def_cfa_register 13
 319              		@ sp needed
 320 0056 80BD     		pop	{r7, pc}
 321              		.cfi_endproc
 322              	.LFE146:
 324              		.section	.text.Error_Handler,"ax",%progbits
 325              		.align	1
 326              		.global	Error_Handler
ARM GAS  /var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccXJY3qx.s 			page 10


 327              		.syntax unified
 328              		.thumb
 329              		.thumb_func
 331              	Error_Handler:
 332              	.LFB147:
 195:Core/Src/main.c **** 
 196:Core/Src/main.c **** /**
 197:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 198:Core/Src/main.c ****   * @retval None
 199:Core/Src/main.c ****   */
 200:Core/Src/main.c **** void Error_Handler(void)
 201:Core/Src/main.c **** {
 333              		.loc 1 201 1
 334              		.cfi_startproc
 335              		@ args = 0, pretend = 0, frame = 0
 336              		@ frame_needed = 1, uses_anonymous_args = 0
 337              		@ link register save eliminated.
 338 0000 80B4     		push	{r7}
 339              	.LCFI12:
 340              		.cfi_def_cfa_offset 4
 341              		.cfi_offset 7, -4
 342 0002 00AF     		add	r7, sp, #0
 343              	.LCFI13:
 344              		.cfi_def_cfa_register 7
 345              	.LBB5:
 346              	.LBB6:
 347              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
ARM GAS  /var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccXJY3qx.s 			page 11


  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
ARM GAS  /var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccXJY3qx.s 			page 12


  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
ARM GAS  /var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccXJY3qx.s 			page 13


 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccXJY3qx.s 			page 14


 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 348              		.loc 2 209 3
 349              		.syntax unified
 350              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 351 0004 72B6     		cpsid i
 352              	@ 0 "" 2
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 353              		.loc 2 210 1
 354              		.thumb
 355              		.syntax unified
 356 0006 00BF     		nop
 357              	.L14:
 358              	.LBE6:
 359              	.LBE5:
 202:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 203:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 204:Core/Src/main.c ****   __disable_irq();
 205:Core/Src/main.c ****   while (1)
 360              		.loc 1 205 9
 361 0008 00BF     		nop
 362 000a FDE7     		b	.L14
 363              		.cfi_endproc
 364              	.LFE147:
 366              		.text
 367              	.Letext0:
 368              		.file 3 "/Users/zhy/Tools/xpack-arm-none-eabi-gcc-14.2.1-1.1/arm-none-eabi/include/machine/_defaul
 369              		.file 4 "/Users/zhy/Tools/xpack-arm-none-eabi-gcc-14.2.1-1.1/arm-none-eabi/include/sys/_stdint.h"
 370              		.file 5 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h743xx.h"
 371              		.file 6 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 372              		.file 7 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rcc.h"
 373              		.file 8 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_gpio.h"
 374              		.file 9 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_cortex.h"
 375              		.file 10 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_pwr_ex.h"
 376              		.file 11 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
 377              		.file 12 "Core/Inc/gpio.h"
ARM GAS  /var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccXJY3qx.s 			page 15


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
/var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccXJY3qx.s:20     .data.blinkInterval:00000000 $d
/var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccXJY3qx.s:23     .data.blinkInterval:00000000 blinkInterval
/var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccXJY3qx.s:26     .text.main:00000000 $t
/var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccXJY3qx.s:32     .text.main:00000000 main
/var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccXJY3qx.s:245    .text.MPU_Config:00000000 MPU_Config
/var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccXJY3qx.s:93     .text.SystemClock_Config:00000000 SystemClock_Config
/var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccXJY3qx.s:81     .text.main:00000040 $d
/var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccXJY3qx.s:87     .text.SystemClock_Config:00000000 $t
/var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccXJY3qx.s:331    .text.Error_Handler:00000000 Error_Handler
/var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccXJY3qx.s:234    .text.SystemClock_Config:000000cc $d
/var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccXJY3qx.s:240    .text.MPU_Config:00000000 $t
/var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccXJY3qx.s:325    .text.Error_Handler:00000000 $t

UNDEFINED SYMBOLS
HAL_Init
MX_GPIO_Init
HAL_GPIO_WritePin
HAL_Delay
memset
HAL_PWREx_ConfigSupply
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_MPU_Disable
HAL_MPU_ConfigRegion
HAL_MPU_Enable
