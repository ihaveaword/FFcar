ARM GAS  /var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccam3FTa.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"system_stm32h7xx.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.file 1 "Core/Src/system_stm32h7xx.c"
  19              		.global	SystemCoreClock
  20              		.section	.data.SystemCoreClock,"aw"
  21              		.align	2
  24              	SystemCoreClock:
  25 0000 0090D003 		.word	64000000
  26              		.global	SystemD2Clock
  27              		.section	.data.SystemD2Clock,"aw"
  28              		.align	2
  31              	SystemD2Clock:
  32 0000 0090D003 		.word	64000000
  33              		.global	D1CorePrescTable
  34              		.section	.rodata.D1CorePrescTable,"a"
  35              		.align	2
  38              	D1CorePrescTable:
  39 0000 00000000 		.ascii	"\000\000\000\000\001\002\003\004\001\002\003\004\006"
  39      01020304 
  39      01020304 
  39      06
  40 000d 070809   		.ascii	"\007\010\011"
  41              		.section	.text.SystemInit,"ax",%progbits
  42              		.align	1
  43              		.global	SystemInit
  44              		.syntax unified
  45              		.thumb
  46              		.thumb_func
  48              	SystemInit:
  49              	.LFB144:
   1:Core/Src/system_stm32h7xx.c **** /**
   2:Core/Src/system_stm32h7xx.c ****   ******************************************************************************
   3:Core/Src/system_stm32h7xx.c ****   * @file    system_stm32h7xx.c
   4:Core/Src/system_stm32h7xx.c ****   * @author  MCD Application Team
   5:Core/Src/system_stm32h7xx.c ****   * @brief   CMSIS Cortex-Mx Device Peripheral Access Layer System Source File.
   6:Core/Src/system_stm32h7xx.c ****   *
   7:Core/Src/system_stm32h7xx.c ****   *   This file provides two functions and one global variable to be called from
   8:Core/Src/system_stm32h7xx.c ****   *   user application:
   9:Core/Src/system_stm32h7xx.c ****   *      - ExitRun0Mode(): Specifies the Power Supply source. This function is
  10:Core/Src/system_stm32h7xx.c ****   *                        called at startup just after reset and before the call
  11:Core/Src/system_stm32h7xx.c ****   *                        of SystemInit(). This call is made inside
  12:Core/Src/system_stm32h7xx.c ****   *                        the "startup_stm32h7xx.s" file.
ARM GAS  /var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccam3FTa.s 			page 2


  13:Core/Src/system_stm32h7xx.c ****   *
  14:Core/Src/system_stm32h7xx.c ****   *      - SystemInit(): This function is called at startup just after reset and
  15:Core/Src/system_stm32h7xx.c ****   *                      before branch to main program. This call is made inside
  16:Core/Src/system_stm32h7xx.c ****   *                      the "startup_stm32h7xx.s" file.
  17:Core/Src/system_stm32h7xx.c ****   *
  18:Core/Src/system_stm32h7xx.c ****   *      - SystemCoreClock variable: Contains the core clock, it can be used
  19:Core/Src/system_stm32h7xx.c ****   *                                  by the user application to setup the SysTick
  20:Core/Src/system_stm32h7xx.c ****   *                                  timer or configure other parameters.
  21:Core/Src/system_stm32h7xx.c ****   *
  22:Core/Src/system_stm32h7xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  23:Core/Src/system_stm32h7xx.c ****   *                                 be called whenever the core clock is changed
  24:Core/Src/system_stm32h7xx.c ****   *                                 during program execution.
  25:Core/Src/system_stm32h7xx.c ****   *
  26:Core/Src/system_stm32h7xx.c ****   *
  27:Core/Src/system_stm32h7xx.c ****   ******************************************************************************
  28:Core/Src/system_stm32h7xx.c ****   * @attention
  29:Core/Src/system_stm32h7xx.c ****   *
  30:Core/Src/system_stm32h7xx.c ****   * Copyright (c) 2017 STMicroelectronics.
  31:Core/Src/system_stm32h7xx.c ****   * All rights reserved.
  32:Core/Src/system_stm32h7xx.c ****   *
  33:Core/Src/system_stm32h7xx.c ****   * This software is licensed under terms that can be found in the LICENSE file
  34:Core/Src/system_stm32h7xx.c ****   * in the root directory of this software component.
  35:Core/Src/system_stm32h7xx.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  36:Core/Src/system_stm32h7xx.c ****   *
  37:Core/Src/system_stm32h7xx.c ****   ******************************************************************************
  38:Core/Src/system_stm32h7xx.c ****   */
  39:Core/Src/system_stm32h7xx.c **** 
  40:Core/Src/system_stm32h7xx.c **** /** @addtogroup CMSIS
  41:Core/Src/system_stm32h7xx.c ****   * @{
  42:Core/Src/system_stm32h7xx.c ****   */
  43:Core/Src/system_stm32h7xx.c **** 
  44:Core/Src/system_stm32h7xx.c **** /** @addtogroup stm32h7xx_system
  45:Core/Src/system_stm32h7xx.c ****   * @{
  46:Core/Src/system_stm32h7xx.c ****   */
  47:Core/Src/system_stm32h7xx.c **** 
  48:Core/Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_Includes
  49:Core/Src/system_stm32h7xx.c ****   * @{
  50:Core/Src/system_stm32h7xx.c ****   */
  51:Core/Src/system_stm32h7xx.c **** 
  52:Core/Src/system_stm32h7xx.c **** #include "stm32h7xx.h"
  53:Core/Src/system_stm32h7xx.c **** #include <math.h>
  54:Core/Src/system_stm32h7xx.c **** 
  55:Core/Src/system_stm32h7xx.c **** #if !defined  (HSE_VALUE)
  56:Core/Src/system_stm32h7xx.c **** #define HSE_VALUE    ((uint32_t)25000000) /*!< Value of the External oscillator in Hz */
  57:Core/Src/system_stm32h7xx.c **** #endif /* HSE_VALUE */
  58:Core/Src/system_stm32h7xx.c **** 
  59:Core/Src/system_stm32h7xx.c **** #if !defined  (CSI_VALUE)
  60:Core/Src/system_stm32h7xx.c ****   #define CSI_VALUE    ((uint32_t)4000000) /*!< Value of the Internal oscillator in Hz*/
  61:Core/Src/system_stm32h7xx.c **** #endif /* CSI_VALUE */
  62:Core/Src/system_stm32h7xx.c **** 
  63:Core/Src/system_stm32h7xx.c **** #if !defined  (HSI_VALUE)
  64:Core/Src/system_stm32h7xx.c ****   #define HSI_VALUE    ((uint32_t)64000000) /*!< Value of the Internal oscillator in Hz*/
  65:Core/Src/system_stm32h7xx.c **** #endif /* HSI_VALUE */
  66:Core/Src/system_stm32h7xx.c **** 
  67:Core/Src/system_stm32h7xx.c **** 
  68:Core/Src/system_stm32h7xx.c **** /**
  69:Core/Src/system_stm32h7xx.c ****   * @}
ARM GAS  /var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccam3FTa.s 			page 3


  70:Core/Src/system_stm32h7xx.c ****   */
  71:Core/Src/system_stm32h7xx.c **** 
  72:Core/Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_TypesDefinitions
  73:Core/Src/system_stm32h7xx.c ****   * @{
  74:Core/Src/system_stm32h7xx.c ****   */
  75:Core/Src/system_stm32h7xx.c **** 
  76:Core/Src/system_stm32h7xx.c **** /**
  77:Core/Src/system_stm32h7xx.c ****   * @}
  78:Core/Src/system_stm32h7xx.c ****   */
  79:Core/Src/system_stm32h7xx.c **** 
  80:Core/Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_Defines
  81:Core/Src/system_stm32h7xx.c ****   * @{
  82:Core/Src/system_stm32h7xx.c ****   */
  83:Core/Src/system_stm32h7xx.c **** 
  84:Core/Src/system_stm32h7xx.c **** /************************* Miscellaneous Configuration ************************/
  85:Core/Src/system_stm32h7xx.c **** /*!< Uncomment the following line if you need to use initialized data in D2 domain SRAM (AHB SRAM) 
  86:Core/Src/system_stm32h7xx.c **** /* #define DATA_IN_D2_SRAM */
  87:Core/Src/system_stm32h7xx.c **** 
  88:Core/Src/system_stm32h7xx.c **** /* Note: Following vector table addresses must be defined in line with linker
  89:Core/Src/system_stm32h7xx.c ****          configuration. */
  90:Core/Src/system_stm32h7xx.c **** /*!< Uncomment the following line if you need to relocate the vector table
  91:Core/Src/system_stm32h7xx.c ****      anywhere in FLASH BANK1 or AXI SRAM, else the vector table is kept at the automatic
  92:Core/Src/system_stm32h7xx.c ****      remap of boot address selected */
  93:Core/Src/system_stm32h7xx.c **** /* #define USER_VECT_TAB_ADDRESS */
  94:Core/Src/system_stm32h7xx.c **** 
  95:Core/Src/system_stm32h7xx.c **** #if defined(USER_VECT_TAB_ADDRESS)
  96:Core/Src/system_stm32h7xx.c **** #if defined(DUAL_CORE) && defined(CORE_CM4)
  97:Core/Src/system_stm32h7xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table
  98:Core/Src/system_stm32h7xx.c ****      in D2 AXI SRAM else user remap will be done in FLASH BANK2. */
  99:Core/Src/system_stm32h7xx.c **** /* #define VECT_TAB_SRAM */
 100:Core/Src/system_stm32h7xx.c **** #if defined(VECT_TAB_SRAM)
 101:Core/Src/system_stm32h7xx.c **** #define VECT_TAB_BASE_ADDRESS   D2_AXISRAM_BASE   /*!< Vector Table base address field.
 102:Core/Src/system_stm32h7xx.c ****                                                        This value must be a multiple of 0x400. */
 103:Core/Src/system_stm32h7xx.c **** #define VECT_TAB_OFFSET         0x00000000U       /*!< Vector Table base offset field.
 104:Core/Src/system_stm32h7xx.c ****                                                        This value must be a multiple of 0x400. */
 105:Core/Src/system_stm32h7xx.c **** #else
 106:Core/Src/system_stm32h7xx.c **** #define VECT_TAB_BASE_ADDRESS   FLASH_BANK2_BASE  /*!< Vector Table base address field.
 107:Core/Src/system_stm32h7xx.c ****                                                        This value must be a multiple of 0x400. */
 108:Core/Src/system_stm32h7xx.c **** #define VECT_TAB_OFFSET         0x00000000U       /*!< Vector Table base offset field.
 109:Core/Src/system_stm32h7xx.c ****                                                        This value must be a multiple of 0x400. */
 110:Core/Src/system_stm32h7xx.c **** #endif /* VECT_TAB_SRAM */
 111:Core/Src/system_stm32h7xx.c **** #else
 112:Core/Src/system_stm32h7xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table
 113:Core/Src/system_stm32h7xx.c ****      in D1 AXI SRAM else user remap will be done in FLASH BANK1. */
 114:Core/Src/system_stm32h7xx.c **** /* #define VECT_TAB_SRAM */
 115:Core/Src/system_stm32h7xx.c **** #if defined(VECT_TAB_SRAM)
 116:Core/Src/system_stm32h7xx.c **** #define VECT_TAB_BASE_ADDRESS   D1_AXISRAM_BASE   /*!< Vector Table base address field.
 117:Core/Src/system_stm32h7xx.c ****                                                        This value must be a multiple of 0x400. */
 118:Core/Src/system_stm32h7xx.c **** #define VECT_TAB_OFFSET         0x00000000U       /*!< Vector Table base offset field.
 119:Core/Src/system_stm32h7xx.c ****                                                        This value must be a multiple of 0x400. */
 120:Core/Src/system_stm32h7xx.c **** #else
 121:Core/Src/system_stm32h7xx.c **** #define VECT_TAB_BASE_ADDRESS   FLASH_BANK1_BASE  /*!< Vector Table base address field.
 122:Core/Src/system_stm32h7xx.c ****                                                        This value must be a multiple of 0x400. */
 123:Core/Src/system_stm32h7xx.c **** #define VECT_TAB_OFFSET         0x00000000U       /*!< Vector Table base offset field.
 124:Core/Src/system_stm32h7xx.c ****                                                        This value must be a multiple of 0x400. */
 125:Core/Src/system_stm32h7xx.c **** #endif /* VECT_TAB_SRAM */
 126:Core/Src/system_stm32h7xx.c **** #endif /* DUAL_CORE && CORE_CM4 */
ARM GAS  /var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccam3FTa.s 			page 4


 127:Core/Src/system_stm32h7xx.c **** #endif /* USER_VECT_TAB_ADDRESS */
 128:Core/Src/system_stm32h7xx.c **** /******************************************************************************/
 129:Core/Src/system_stm32h7xx.c **** 
 130:Core/Src/system_stm32h7xx.c **** /**
 131:Core/Src/system_stm32h7xx.c ****   * @}
 132:Core/Src/system_stm32h7xx.c ****   */
 133:Core/Src/system_stm32h7xx.c **** 
 134:Core/Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_Macros
 135:Core/Src/system_stm32h7xx.c ****   * @{
 136:Core/Src/system_stm32h7xx.c ****   */
 137:Core/Src/system_stm32h7xx.c **** 
 138:Core/Src/system_stm32h7xx.c **** /**
 139:Core/Src/system_stm32h7xx.c ****   * @}
 140:Core/Src/system_stm32h7xx.c ****   */
 141:Core/Src/system_stm32h7xx.c **** 
 142:Core/Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_Variables
 143:Core/Src/system_stm32h7xx.c ****   * @{
 144:Core/Src/system_stm32h7xx.c ****   */
 145:Core/Src/system_stm32h7xx.c ****   /* This variable is updated in three ways:
 146:Core/Src/system_stm32h7xx.c ****       1) by calling CMSIS function SystemCoreClockUpdate()
 147:Core/Src/system_stm32h7xx.c ****       2) by calling HAL API function HAL_RCC_GetHCLKFreq()
 148:Core/Src/system_stm32h7xx.c ****       3) each time HAL_RCC_ClockConfig() is called to configure the system clock frequency
 149:Core/Src/system_stm32h7xx.c ****          Note: If you use this function to configure the system clock; then there
 150:Core/Src/system_stm32h7xx.c ****                is no need to call the 2 first functions listed above, since SystemCoreClock
 151:Core/Src/system_stm32h7xx.c ****                variable is updated automatically.
 152:Core/Src/system_stm32h7xx.c ****   */
 153:Core/Src/system_stm32h7xx.c ****   uint32_t SystemCoreClock = 64000000;
 154:Core/Src/system_stm32h7xx.c ****   uint32_t SystemD2Clock = 64000000;
 155:Core/Src/system_stm32h7xx.c ****   const  uint8_t D1CorePrescTable[16] = {0, 0, 0, 0, 1, 2, 3, 4, 1, 2, 3, 4, 6, 7, 8, 9};
 156:Core/Src/system_stm32h7xx.c **** 
 157:Core/Src/system_stm32h7xx.c **** /**
 158:Core/Src/system_stm32h7xx.c ****   * @}
 159:Core/Src/system_stm32h7xx.c ****   */
 160:Core/Src/system_stm32h7xx.c **** 
 161:Core/Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_FunctionPrototypes
 162:Core/Src/system_stm32h7xx.c ****   * @{
 163:Core/Src/system_stm32h7xx.c ****   */
 164:Core/Src/system_stm32h7xx.c **** 
 165:Core/Src/system_stm32h7xx.c **** /**
 166:Core/Src/system_stm32h7xx.c ****   * @}
 167:Core/Src/system_stm32h7xx.c ****   */
 168:Core/Src/system_stm32h7xx.c **** 
 169:Core/Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_Functions
 170:Core/Src/system_stm32h7xx.c ****   * @{
 171:Core/Src/system_stm32h7xx.c ****   */
 172:Core/Src/system_stm32h7xx.c **** 
 173:Core/Src/system_stm32h7xx.c **** /**
 174:Core/Src/system_stm32h7xx.c ****   * @brief  Setup the microcontroller system
 175:Core/Src/system_stm32h7xx.c ****   *         Initialize the FPU setting and  vector table location
 176:Core/Src/system_stm32h7xx.c ****   *         configuration.
 177:Core/Src/system_stm32h7xx.c ****   * @param  None
 178:Core/Src/system_stm32h7xx.c ****   * @retval None
 179:Core/Src/system_stm32h7xx.c ****   */
 180:Core/Src/system_stm32h7xx.c **** void SystemInit (void)
 181:Core/Src/system_stm32h7xx.c **** {
  50              		.loc 1 181 1
  51              		.cfi_startproc
ARM GAS  /var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccam3FTa.s 			page 5


  52              		@ args = 0, pretend = 0, frame = 0
  53              		@ frame_needed = 1, uses_anonymous_args = 0
  54              		@ link register save eliminated.
  55 0000 80B4     		push	{r7}
  56              	.LCFI0:
  57              		.cfi_def_cfa_offset 4
  58              		.cfi_offset 7, -4
  59 0002 00AF     		add	r7, sp, #0
  60              	.LCFI1:
  61              		.cfi_def_cfa_register 7
 182:Core/Src/system_stm32h7xx.c **** #if defined (DATA_IN_D2_SRAM)
 183:Core/Src/system_stm32h7xx.c ****  __IO uint32_t tmpreg;
 184:Core/Src/system_stm32h7xx.c **** #endif /* DATA_IN_D2_SRAM */
 185:Core/Src/system_stm32h7xx.c **** 
 186:Core/Src/system_stm32h7xx.c ****   /* FPU settings ------------------------------------------------------------*/
 187:Core/Src/system_stm32h7xx.c ****   #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 188:Core/Src/system_stm32h7xx.c ****     SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
  62              		.loc 1 188 8
  63 0004 434B     		ldr	r3, .L7
  64 0006 D3F88830 		ldr	r3, [r3, #136]
  65 000a 424A     		ldr	r2, .L7
  66              		.loc 1 188 16
  67 000c 43F47003 		orr	r3, r3, #15728640
  68 0010 C2F88830 		str	r3, [r2, #136]
 189:Core/Src/system_stm32h7xx.c ****   #endif
 190:Core/Src/system_stm32h7xx.c ****   /* Reset the RCC clock configuration to the default reset state ------------*/
 191:Core/Src/system_stm32h7xx.c **** 
 192:Core/Src/system_stm32h7xx.c ****    /* Increasing the CPU frequency */
 193:Core/Src/system_stm32h7xx.c ****   if(FLASH_LATENCY_DEFAULT  > (READ_BIT((FLASH->ACR), FLASH_ACR_LATENCY)))
  69              		.loc 1 193 32
  70 0014 404B     		ldr	r3, .L7+4
  71 0016 1B68     		ldr	r3, [r3]
  72 0018 03F00F03 		and	r3, r3, #15
  73              		.loc 1 193 5
  74 001c 062B     		cmp	r3, #6
  75 001e 07D8     		bhi	.L2
 194:Core/Src/system_stm32h7xx.c ****   {
 195:Core/Src/system_stm32h7xx.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 196:Core/Src/system_stm32h7xx.c ****     MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY, (uint32_t)(FLASH_LATENCY_DEFAULT));
  76              		.loc 1 196 5
  77 0020 3D4B     		ldr	r3, .L7+4
  78 0022 1B68     		ldr	r3, [r3]
  79 0024 23F00F03 		bic	r3, r3, #15
  80 0028 3B4A     		ldr	r2, .L7+4
  81 002a 43F00703 		orr	r3, r3, #7
  82 002e 1360     		str	r3, [r2]
  83              	.L2:
 197:Core/Src/system_stm32h7xx.c ****   }
 198:Core/Src/system_stm32h7xx.c **** 
 199:Core/Src/system_stm32h7xx.c ****   /* Set HSION bit */
 200:Core/Src/system_stm32h7xx.c ****   RCC->CR |= RCC_CR_HSION;
  84              		.loc 1 200 6
  85 0030 3A4B     		ldr	r3, .L7+8
  86 0032 1B68     		ldr	r3, [r3]
  87 0034 394A     		ldr	r2, .L7+8
  88              		.loc 1 200 11
  89 0036 43F00103 		orr	r3, r3, #1
ARM GAS  /var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccam3FTa.s 			page 6


  90 003a 1360     		str	r3, [r2]
 201:Core/Src/system_stm32h7xx.c **** 
 202:Core/Src/system_stm32h7xx.c ****   /* Reset CFGR register */
 203:Core/Src/system_stm32h7xx.c ****   RCC->CFGR = 0x00000000;
  91              		.loc 1 203 6
  92 003c 374B     		ldr	r3, .L7+8
  93              		.loc 1 203 13
  94 003e 0022     		movs	r2, #0
  95 0040 1A61     		str	r2, [r3, #16]
 204:Core/Src/system_stm32h7xx.c **** 
 205:Core/Src/system_stm32h7xx.c ****   /* Reset HSEON, HSECSSON, CSION, HSI48ON, CSIKERON, PLL1ON, PLL2ON and PLL3ON bits */
 206:Core/Src/system_stm32h7xx.c ****   RCC->CR &= 0xEAF6ED7FU;
  96              		.loc 1 206 6
  97 0042 364B     		ldr	r3, .L7+8
  98 0044 1A68     		ldr	r2, [r3]
  99 0046 3549     		ldr	r1, .L7+8
 100              		.loc 1 206 11
 101 0048 354B     		ldr	r3, .L7+12
 102 004a 1340     		ands	r3, r3, r2
 103 004c 0B60     		str	r3, [r1]
 207:Core/Src/system_stm32h7xx.c **** 
 208:Core/Src/system_stm32h7xx.c ****    /* Decreasing the number of wait states because of lower CPU frequency */
 209:Core/Src/system_stm32h7xx.c ****   if(FLASH_LATENCY_DEFAULT  < (READ_BIT((FLASH->ACR), FLASH_ACR_LATENCY)))
 104              		.loc 1 209 32
 105 004e 324B     		ldr	r3, .L7+4
 106 0050 1B68     		ldr	r3, [r3]
 107              		.loc 1 209 29
 108 0052 03F00803 		and	r3, r3, #8
 109              		.loc 1 209 5
 110 0056 002B     		cmp	r3, #0
 111 0058 07D0     		beq	.L3
 210:Core/Src/system_stm32h7xx.c ****   {
 211:Core/Src/system_stm32h7xx.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 212:Core/Src/system_stm32h7xx.c ****     MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY, (uint32_t)(FLASH_LATENCY_DEFAULT));
 112              		.loc 1 212 5
 113 005a 2F4B     		ldr	r3, .L7+4
 114 005c 1B68     		ldr	r3, [r3]
 115 005e 23F00F03 		bic	r3, r3, #15
 116 0062 2D4A     		ldr	r2, .L7+4
 117 0064 43F00703 		orr	r3, r3, #7
 118 0068 1360     		str	r3, [r2]
 119              	.L3:
 213:Core/Src/system_stm32h7xx.c ****   }
 214:Core/Src/system_stm32h7xx.c **** 
 215:Core/Src/system_stm32h7xx.c **** #if defined(D3_SRAM_BASE)
 216:Core/Src/system_stm32h7xx.c ****   /* Reset D1CFGR register */
 217:Core/Src/system_stm32h7xx.c ****   RCC->D1CFGR = 0x00000000;
 120              		.loc 1 217 6
 121 006a 2C4B     		ldr	r3, .L7+8
 122              		.loc 1 217 15
 123 006c 0022     		movs	r2, #0
 124 006e 9A61     		str	r2, [r3, #24]
 218:Core/Src/system_stm32h7xx.c **** 
 219:Core/Src/system_stm32h7xx.c ****   /* Reset D2CFGR register */
 220:Core/Src/system_stm32h7xx.c ****   RCC->D2CFGR = 0x00000000;
 125              		.loc 1 220 6
 126 0070 2A4B     		ldr	r3, .L7+8
ARM GAS  /var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccam3FTa.s 			page 7


 127              		.loc 1 220 15
 128 0072 0022     		movs	r2, #0
 129 0074 DA61     		str	r2, [r3, #28]
 221:Core/Src/system_stm32h7xx.c **** 
 222:Core/Src/system_stm32h7xx.c ****   /* Reset D3CFGR register */
 223:Core/Src/system_stm32h7xx.c ****   RCC->D3CFGR = 0x00000000;
 130              		.loc 1 223 6
 131 0076 294B     		ldr	r3, .L7+8
 132              		.loc 1 223 15
 133 0078 0022     		movs	r2, #0
 134 007a 1A62     		str	r2, [r3, #32]
 224:Core/Src/system_stm32h7xx.c **** #else
 225:Core/Src/system_stm32h7xx.c ****   /* Reset CDCFGR1 register */
 226:Core/Src/system_stm32h7xx.c ****   RCC->CDCFGR1 = 0x00000000;
 227:Core/Src/system_stm32h7xx.c **** 
 228:Core/Src/system_stm32h7xx.c ****   /* Reset CDCFGR2 register */
 229:Core/Src/system_stm32h7xx.c ****   RCC->CDCFGR2 = 0x00000000;
 230:Core/Src/system_stm32h7xx.c **** 
 231:Core/Src/system_stm32h7xx.c ****   /* Reset SRDCFGR register */
 232:Core/Src/system_stm32h7xx.c ****   RCC->SRDCFGR = 0x00000000;
 233:Core/Src/system_stm32h7xx.c **** #endif
 234:Core/Src/system_stm32h7xx.c ****   /* Reset PLLCKSELR register */
 235:Core/Src/system_stm32h7xx.c ****   RCC->PLLCKSELR = 0x02020200;
 135              		.loc 1 235 6
 136 007c 274B     		ldr	r3, .L7+8
 137              		.loc 1 235 18
 138 007e 294A     		ldr	r2, .L7+16
 139 0080 9A62     		str	r2, [r3, #40]
 236:Core/Src/system_stm32h7xx.c **** 
 237:Core/Src/system_stm32h7xx.c ****   /* Reset PLLCFGR register */
 238:Core/Src/system_stm32h7xx.c ****   RCC->PLLCFGR = 0x01FF0000;
 140              		.loc 1 238 6
 141 0082 264B     		ldr	r3, .L7+8
 142              		.loc 1 238 16
 143 0084 284A     		ldr	r2, .L7+20
 144 0086 DA62     		str	r2, [r3, #44]
 239:Core/Src/system_stm32h7xx.c ****   /* Reset PLL1DIVR register */
 240:Core/Src/system_stm32h7xx.c ****   RCC->PLL1DIVR = 0x01010280;
 145              		.loc 1 240 6
 146 0088 244B     		ldr	r3, .L7+8
 147              		.loc 1 240 17
 148 008a 284A     		ldr	r2, .L7+24
 149 008c 1A63     		str	r2, [r3, #48]
 241:Core/Src/system_stm32h7xx.c ****   /* Reset PLL1FRACR register */
 242:Core/Src/system_stm32h7xx.c ****   RCC->PLL1FRACR = 0x00000000;
 150              		.loc 1 242 6
 151 008e 234B     		ldr	r3, .L7+8
 152              		.loc 1 242 18
 153 0090 0022     		movs	r2, #0
 154 0092 5A63     		str	r2, [r3, #52]
 243:Core/Src/system_stm32h7xx.c **** 
 244:Core/Src/system_stm32h7xx.c ****   /* Reset PLL2DIVR register */
 245:Core/Src/system_stm32h7xx.c ****   RCC->PLL2DIVR = 0x01010280;
 155              		.loc 1 245 6
 156 0094 214B     		ldr	r3, .L7+8
 157              		.loc 1 245 17
 158 0096 254A     		ldr	r2, .L7+24
ARM GAS  /var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccam3FTa.s 			page 8


 159 0098 9A63     		str	r2, [r3, #56]
 246:Core/Src/system_stm32h7xx.c **** 
 247:Core/Src/system_stm32h7xx.c ****   /* Reset PLL2FRACR register */
 248:Core/Src/system_stm32h7xx.c **** 
 249:Core/Src/system_stm32h7xx.c ****   RCC->PLL2FRACR = 0x00000000;
 160              		.loc 1 249 6
 161 009a 204B     		ldr	r3, .L7+8
 162              		.loc 1 249 18
 163 009c 0022     		movs	r2, #0
 164 009e DA63     		str	r2, [r3, #60]
 250:Core/Src/system_stm32h7xx.c ****   /* Reset PLL3DIVR register */
 251:Core/Src/system_stm32h7xx.c ****   RCC->PLL3DIVR = 0x01010280;
 165              		.loc 1 251 6
 166 00a0 1E4B     		ldr	r3, .L7+8
 167              		.loc 1 251 17
 168 00a2 224A     		ldr	r2, .L7+24
 169 00a4 1A64     		str	r2, [r3, #64]
 252:Core/Src/system_stm32h7xx.c **** 
 253:Core/Src/system_stm32h7xx.c ****   /* Reset PLL3FRACR register */
 254:Core/Src/system_stm32h7xx.c ****   RCC->PLL3FRACR = 0x00000000;
 170              		.loc 1 254 6
 171 00a6 1D4B     		ldr	r3, .L7+8
 172              		.loc 1 254 18
 173 00a8 0022     		movs	r2, #0
 174 00aa 5A64     		str	r2, [r3, #68]
 255:Core/Src/system_stm32h7xx.c **** 
 256:Core/Src/system_stm32h7xx.c ****   /* Reset HSEBYP bit */
 257:Core/Src/system_stm32h7xx.c ****   RCC->CR &= 0xFFFBFFFFU;
 175              		.loc 1 257 6
 176 00ac 1B4B     		ldr	r3, .L7+8
 177 00ae 1B68     		ldr	r3, [r3]
 178 00b0 1A4A     		ldr	r2, .L7+8
 179              		.loc 1 257 11
 180 00b2 23F48023 		bic	r3, r3, #262144
 181 00b6 1360     		str	r3, [r2]
 258:Core/Src/system_stm32h7xx.c **** 
 259:Core/Src/system_stm32h7xx.c ****   /* Disable all interrupts */
 260:Core/Src/system_stm32h7xx.c ****   RCC->CIER = 0x00000000;
 182              		.loc 1 260 6
 183 00b8 184B     		ldr	r3, .L7+8
 184              		.loc 1 260 13
 185 00ba 0022     		movs	r2, #0
 186 00bc 1A66     		str	r2, [r3, #96]
 261:Core/Src/system_stm32h7xx.c **** 
 262:Core/Src/system_stm32h7xx.c **** #if (STM32H7_DEV_ID == 0x450UL)
 263:Core/Src/system_stm32h7xx.c ****   /* dual core CM7 or single core line */
 264:Core/Src/system_stm32h7xx.c ****   if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
 187              		.loc 1 264 13
 188 00be 1C4B     		ldr	r3, .L7+28
 189 00c0 1A68     		ldr	r2, [r3]
 190              		.loc 1 264 22
 191 00c2 1C4B     		ldr	r3, .L7+32
 192 00c4 1340     		ands	r3, r3, r2
 193              		.loc 1 264 5
 194 00c6 B3F1005F 		cmp	r3, #536870912
 195 00ca 02D2     		bcs	.L4
 265:Core/Src/system_stm32h7xx.c ****   {
ARM GAS  /var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccam3FTa.s 			page 9


 266:Core/Src/system_stm32h7xx.c ****     /* if stm32h7 revY*/
 267:Core/Src/system_stm32h7xx.c ****     /* Change  the switch matrix read issuing capability to 1 for the AXI SRAM target (Target 7) */
 268:Core/Src/system_stm32h7xx.c ****     *((__IO uint32_t*)0x51008108) = 0x000000001U;
 196              		.loc 1 268 5
 197 00cc 1A4B     		ldr	r3, .L7+36
 198              		.loc 1 268 35
 199 00ce 0122     		movs	r2, #1
 200 00d0 1A60     		str	r2, [r3]
 201              	.L4:
 269:Core/Src/system_stm32h7xx.c ****   }
 270:Core/Src/system_stm32h7xx.c **** #endif /* STM32H7_DEV_ID */
 271:Core/Src/system_stm32h7xx.c **** 
 272:Core/Src/system_stm32h7xx.c **** #if defined(DATA_IN_D2_SRAM)
 273:Core/Src/system_stm32h7xx.c ****   /* in case of initialized data in D2 SRAM (AHB SRAM), enable the D2 SRAM clock (AHB SRAM clock) *
 274:Core/Src/system_stm32h7xx.c **** #if defined(RCC_AHB2ENR_D2SRAM3EN)
 275:Core/Src/system_stm32h7xx.c ****   RCC->AHB2ENR |= (RCC_AHB2ENR_D2SRAM1EN | RCC_AHB2ENR_D2SRAM2EN | RCC_AHB2ENR_D2SRAM3EN);
 276:Core/Src/system_stm32h7xx.c **** #elif defined(RCC_AHB2ENR_D2SRAM2EN)
 277:Core/Src/system_stm32h7xx.c ****   RCC->AHB2ENR |= (RCC_AHB2ENR_D2SRAM1EN | RCC_AHB2ENR_D2SRAM2EN);
 278:Core/Src/system_stm32h7xx.c **** #else
 279:Core/Src/system_stm32h7xx.c ****   RCC->AHB2ENR |= (RCC_AHB2ENR_AHBSRAM1EN | RCC_AHB2ENR_AHBSRAM2EN);
 280:Core/Src/system_stm32h7xx.c **** #endif /* RCC_AHB2ENR_D2SRAM3EN */
 281:Core/Src/system_stm32h7xx.c **** 
 282:Core/Src/system_stm32h7xx.c ****   tmpreg = RCC->AHB2ENR;
 283:Core/Src/system_stm32h7xx.c ****   (void) tmpreg;
 284:Core/Src/system_stm32h7xx.c **** #endif /* DATA_IN_D2_SRAM */
 285:Core/Src/system_stm32h7xx.c **** 
 286:Core/Src/system_stm32h7xx.c **** #if defined(DUAL_CORE) && defined(CORE_CM4)
 287:Core/Src/system_stm32h7xx.c ****   /* Configure the Vector Table location add offset address for cortex-M4 ------------------*/
 288:Core/Src/system_stm32h7xx.c **** #if defined(USER_VECT_TAB_ADDRESS)
 289:Core/Src/system_stm32h7xx.c ****   SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal D2 AX
 290:Core/Src/system_stm32h7xx.c **** #endif /* USER_VECT_TAB_ADDRESS */
 291:Core/Src/system_stm32h7xx.c **** 
 292:Core/Src/system_stm32h7xx.c **** #else
 293:Core/Src/system_stm32h7xx.c ****   if(READ_BIT(RCC->AHB3ENR, RCC_AHB3ENR_FMCEN) == 0U)
 202              		.loc 1 293 6
 203 00d2 124B     		ldr	r3, .L7+8
 204 00d4 D3F8D430 		ldr	r3, [r3, #212]
 205 00d8 03F48053 		and	r3, r3, #4096
 206              		.loc 1 293 5
 207 00dc 002B     		cmp	r3, #0
 208 00de 13D1     		bne	.L6
 294:Core/Src/system_stm32h7xx.c ****   {
 295:Core/Src/system_stm32h7xx.c ****     /* Enable the FMC interface clock */
 296:Core/Src/system_stm32h7xx.c ****     SET_BIT(RCC->AHB3ENR, RCC_AHB3ENR_FMCEN);
 209              		.loc 1 296 5
 210 00e0 0E4B     		ldr	r3, .L7+8
 211 00e2 D3F8D430 		ldr	r3, [r3, #212]
 212 00e6 0D4A     		ldr	r2, .L7+8
 213 00e8 43F48053 		orr	r3, r3, #4096
 214 00ec C2F8D430 		str	r3, [r2, #212]
 297:Core/Src/system_stm32h7xx.c **** 
 298:Core/Src/system_stm32h7xx.c ****     /*
 299:Core/Src/system_stm32h7xx.c ****      * Disable the FMC bank1 (enabled after reset).
 300:Core/Src/system_stm32h7xx.c ****      * This, prevents CPU speculation access on this bank which blocks the use of FMC during
 301:Core/Src/system_stm32h7xx.c ****      * 24us. During this time the others FMC master (such as LTDC) cannot use it!
 302:Core/Src/system_stm32h7xx.c ****      */
 303:Core/Src/system_stm32h7xx.c ****     FMC_Bank1_R->BTCR[0] = 0x000030D2;
ARM GAS  /var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccam3FTa.s 			page 10


 215              		.loc 1 303 16
 216 00f0 124B     		ldr	r3, .L7+40
 217              		.loc 1 303 26
 218 00f2 43F2D202 		movw	r2, #12498
 219 00f6 1A60     		str	r2, [r3]
 304:Core/Src/system_stm32h7xx.c **** 
 305:Core/Src/system_stm32h7xx.c ****     /* Disable the FMC interface clock */
 306:Core/Src/system_stm32h7xx.c ****     CLEAR_BIT(RCC->AHB3ENR, RCC_AHB3ENR_FMCEN);
 220              		.loc 1 306 5
 221 00f8 084B     		ldr	r3, .L7+8
 222 00fa D3F8D430 		ldr	r3, [r3, #212]
 223 00fe 074A     		ldr	r2, .L7+8
 224 0100 23F48053 		bic	r3, r3, #4096
 225 0104 C2F8D430 		str	r3, [r2, #212]
 226              	.L6:
 307:Core/Src/system_stm32h7xx.c ****   }
 308:Core/Src/system_stm32h7xx.c **** 
 309:Core/Src/system_stm32h7xx.c ****   /* Configure the Vector Table location -------------------------------------*/
 310:Core/Src/system_stm32h7xx.c **** #if defined(USER_VECT_TAB_ADDRESS)
 311:Core/Src/system_stm32h7xx.c ****   SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal D1 AX
 312:Core/Src/system_stm32h7xx.c **** #endif /* USER_VECT_TAB_ADDRESS */
 313:Core/Src/system_stm32h7xx.c **** 
 314:Core/Src/system_stm32h7xx.c **** #endif /*DUAL_CORE && CORE_CM4*/
 315:Core/Src/system_stm32h7xx.c **** }
 227              		.loc 1 315 1
 228 0108 00BF     		nop
 229 010a BD46     		mov	sp, r7
 230              	.LCFI2:
 231              		.cfi_def_cfa_register 13
 232              		@ sp needed
 233 010c 5DF8047B 		ldr	r7, [sp], #4
 234              	.LCFI3:
 235              		.cfi_restore 7
 236              		.cfi_def_cfa_offset 0
 237 0110 7047     		bx	lr
 238              	.L8:
 239 0112 00BF     		.align	2
 240              	.L7:
 241 0114 00ED00E0 		.word	-536810240
 242 0118 00200052 		.word	1375739904
 243 011c 00440258 		.word	1476543488
 244 0120 7FEDF6EA 		.word	-352916097
 245 0124 00020202 		.word	33686016
 246 0128 0000FF01 		.word	33488896
 247 012c 80020101 		.word	16843392
 248 0130 0010005C 		.word	1543507968
 249 0134 0000FFFF 		.word	-65536
 250 0138 08810051 		.word	1358987528
 251 013c 00400052 		.word	1375748096
 252              		.cfi_endproc
 253              	.LFE144:
 255              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
 256              		.align	1
 257              		.global	SystemCoreClockUpdate
 258              		.syntax unified
 259              		.thumb
 260              		.thumb_func
ARM GAS  /var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccam3FTa.s 			page 11


 262              	SystemCoreClockUpdate:
 263              	.LFB145:
 316:Core/Src/system_stm32h7xx.c **** 
 317:Core/Src/system_stm32h7xx.c **** /**
 318:Core/Src/system_stm32h7xx.c ****   * @brief  Update SystemCoreClock variable according to Clock Register Values.
 319:Core/Src/system_stm32h7xx.c ****   *         The SystemCoreClock variable contains the core clock , it can
 320:Core/Src/system_stm32h7xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 321:Core/Src/system_stm32h7xx.c ****   *         other parameters.
 322:Core/Src/system_stm32h7xx.c ****   *
 323:Core/Src/system_stm32h7xx.c ****   * @note   Each time the core clock changes, this function must be called
 324:Core/Src/system_stm32h7xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 325:Core/Src/system_stm32h7xx.c ****   *         based on this variable will be incorrect.
 326:Core/Src/system_stm32h7xx.c ****   *
 327:Core/Src/system_stm32h7xx.c ****   * @note   - The system frequency computed by this function is not the real
 328:Core/Src/system_stm32h7xx.c ****   *           frequency in the chip. It is calculated based on the predefined
 329:Core/Src/system_stm32h7xx.c ****   *           constant and the selected clock source:
 330:Core/Src/system_stm32h7xx.c ****   *
 331:Core/Src/system_stm32h7xx.c ****   *           - If SYSCLK source is CSI, SystemCoreClock will contain the CSI_VALUE(*)
 332:Core/Src/system_stm32h7xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(**)
 333:Core/Src/system_stm32h7xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(***)
 334:Core/Src/system_stm32h7xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the CSI_VALUE(*),
 335:Core/Src/system_stm32h7xx.c ****   *             HSI_VALUE(**) or HSE_VALUE(***) multiplied/divided by the PLL factors.
 336:Core/Src/system_stm32h7xx.c ****   *
 337:Core/Src/system_stm32h7xx.c ****   *         (*) CSI_VALUE is a constant defined in stm32h7xx_hal.h file (default value
 338:Core/Src/system_stm32h7xx.c ****   *             4 MHz) but the real value may vary depending on the variations
 339:Core/Src/system_stm32h7xx.c ****   *             in voltage and temperature.
 340:Core/Src/system_stm32h7xx.c ****   *         (**) HSI_VALUE is a constant defined in stm32h7xx_hal.h file (default value
 341:Core/Src/system_stm32h7xx.c ****   *             64 MHz) but the real value may vary depending on the variations
 342:Core/Src/system_stm32h7xx.c ****   *             in voltage and temperature.
 343:Core/Src/system_stm32h7xx.c ****   *
 344:Core/Src/system_stm32h7xx.c ****   *         (***)HSE_VALUE is a constant defined in stm32h7xx_hal.h file (default value
 345:Core/Src/system_stm32h7xx.c ****   *              25 MHz), user has to ensure that HSE_VALUE is same as the real
 346:Core/Src/system_stm32h7xx.c ****   *              frequency of the crystal used. Otherwise, this function may
 347:Core/Src/system_stm32h7xx.c ****   *              have wrong result.
 348:Core/Src/system_stm32h7xx.c ****   *
 349:Core/Src/system_stm32h7xx.c ****   *         - The result of this function could be not correct when using fractional
 350:Core/Src/system_stm32h7xx.c ****   *           value for HSE crystal.
 351:Core/Src/system_stm32h7xx.c ****   * @param  None
 352:Core/Src/system_stm32h7xx.c ****   * @retval None
 353:Core/Src/system_stm32h7xx.c ****   */
 354:Core/Src/system_stm32h7xx.c **** void SystemCoreClockUpdate (void)
 355:Core/Src/system_stm32h7xx.c **** {
 264              		.loc 1 355 1
 265              		.cfi_startproc
 266              		@ args = 0, pretend = 0, frame = 40
 267              		@ frame_needed = 1, uses_anonymous_args = 0
 268              		@ link register save eliminated.
 269 0000 80B4     		push	{r7}
 270              	.LCFI4:
 271              		.cfi_def_cfa_offset 4
 272              		.cfi_offset 7, -4
 273 0002 8BB0     		sub	sp, sp, #44
 274              	.LCFI5:
 275              		.cfi_def_cfa_offset 48
 276 0004 00AF     		add	r7, sp, #0
 277              	.LCFI6:
 278              		.cfi_def_cfa_register 7
ARM GAS  /var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccam3FTa.s 			page 12


 356:Core/Src/system_stm32h7xx.c ****   uint32_t pllp, pllsource, pllm, pllfracen, hsivalue, tmp;
 357:Core/Src/system_stm32h7xx.c ****   uint32_t common_system_clock;
 358:Core/Src/system_stm32h7xx.c ****   float_t fracn1, pllvco;
 359:Core/Src/system_stm32h7xx.c **** 
 360:Core/Src/system_stm32h7xx.c **** 
 361:Core/Src/system_stm32h7xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 362:Core/Src/system_stm32h7xx.c **** 
 363:Core/Src/system_stm32h7xx.c ****   switch (RCC->CFGR & RCC_CFGR_SWS)
 279              		.loc 1 363 14
 280 0006 B14B     		ldr	r3, .L24
 281 0008 1B69     		ldr	r3, [r3, #16]
 282              		.loc 1 363 21
 283 000a 03F03803 		and	r3, r3, #56
 284              		.loc 1 363 3
 285 000e 182B     		cmp	r3, #24
 286 0010 00F22E81 		bhi	.L10
 287 0014 01A2     		adr	r2, .L12
 288 0016 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 289 001a 00BF     		.p2align 2
 290              	.L12:
 291 001c 81000000 		.word	.L15+1
 292 0020 71020000 		.word	.L10+1
 293 0024 71020000 		.word	.L10+1
 294 0028 71020000 		.word	.L10+1
 295 002c 71020000 		.word	.L10+1
 296 0030 71020000 		.word	.L10+1
 297 0034 71020000 		.word	.L10+1
 298 0038 71020000 		.word	.L10+1
 299 003c 95000000 		.word	.L14+1
 300 0040 71020000 		.word	.L10+1
 301 0044 71020000 		.word	.L10+1
 302 0048 71020000 		.word	.L10+1
 303 004c 71020000 		.word	.L10+1
 304 0050 71020000 		.word	.L10+1
 305 0054 71020000 		.word	.L10+1
 306 0058 71020000 		.word	.L10+1
 307 005c 9B000000 		.word	.L13+1
 308 0060 71020000 		.word	.L10+1
 309 0064 71020000 		.word	.L10+1
 310 0068 71020000 		.word	.L10+1
 311 006c 71020000 		.word	.L10+1
 312 0070 71020000 		.word	.L10+1
 313 0074 71020000 		.word	.L10+1
 314 0078 71020000 		.word	.L10+1
 315 007c A1000000 		.word	.L11+1
 316              		.p2align 1
 317              	.L15:
 364:Core/Src/system_stm32h7xx.c ****   {
 365:Core/Src/system_stm32h7xx.c ****   case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
 366:Core/Src/system_stm32h7xx.c ****     common_system_clock = (uint32_t) (HSI_VALUE >> ((RCC->CR & RCC_CR_HSIDIV)>> 3));
 318              		.loc 1 366 57
 319 0080 924B     		ldr	r3, .L24
 320 0082 1B68     		ldr	r3, [r3]
 321              		.loc 1 366 78
 322 0084 DB08     		lsrs	r3, r3, #3
 323 0086 03F00303 		and	r3, r3, #3
 324              		.loc 1 366 25
ARM GAS  /var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccam3FTa.s 			page 13


 325 008a 914A     		ldr	r2, .L24+4
 326 008c 22FA03F3 		lsr	r3, r2, r3
 327 0090 7B62     		str	r3, [r7, #36]
 367:Core/Src/system_stm32h7xx.c ****     break;
 328              		.loc 1 367 5
 329 0092 F7E0     		b	.L16
 330              	.L14:
 368:Core/Src/system_stm32h7xx.c **** 
 369:Core/Src/system_stm32h7xx.c ****   case RCC_CFGR_SWS_CSI:  /* CSI used as system clock  source */
 370:Core/Src/system_stm32h7xx.c ****     common_system_clock = CSI_VALUE;
 331              		.loc 1 370 25
 332 0094 8F4B     		ldr	r3, .L24+8
 333 0096 7B62     		str	r3, [r7, #36]
 371:Core/Src/system_stm32h7xx.c ****     break;
 334              		.loc 1 371 5
 335 0098 F4E0     		b	.L16
 336              	.L13:
 372:Core/Src/system_stm32h7xx.c **** 
 373:Core/Src/system_stm32h7xx.c ****   case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
 374:Core/Src/system_stm32h7xx.c ****     common_system_clock = HSE_VALUE;
 337              		.loc 1 374 25
 338 009a 8F4B     		ldr	r3, .L24+12
 339 009c 7B62     		str	r3, [r7, #36]
 375:Core/Src/system_stm32h7xx.c ****     break;
 340              		.loc 1 375 5
 341 009e F1E0     		b	.L16
 342              	.L11:
 376:Core/Src/system_stm32h7xx.c **** 
 377:Core/Src/system_stm32h7xx.c ****   case RCC_CFGR_SWS_PLL1:  /* PLL1 used as system clock  source */
 378:Core/Src/system_stm32h7xx.c **** 
 379:Core/Src/system_stm32h7xx.c ****     /* PLL_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLLM) * PLLN
 380:Core/Src/system_stm32h7xx.c ****     SYSCLK = PLL_VCO / PLLR
 381:Core/Src/system_stm32h7xx.c ****     */
 382:Core/Src/system_stm32h7xx.c ****     pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
 343              		.loc 1 382 21
 344 00a0 8A4B     		ldr	r3, .L24
 345 00a2 9B6A     		ldr	r3, [r3, #40]
 346              		.loc 1 382 15
 347 00a4 03F00303 		and	r3, r3, #3
 348 00a8 FB61     		str	r3, [r7, #28]
 383:Core/Src/system_stm32h7xx.c ****     pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1)>> 4)  ;
 349              		.loc 1 383 17
 350 00aa 884B     		ldr	r3, .L24
 351 00ac 9B6A     		ldr	r3, [r3, #40]
 352              		.loc 1 383 51
 353 00ae 1B09     		lsrs	r3, r3, #4
 354              		.loc 1 383 10
 355 00b0 03F03F03 		and	r3, r3, #63
 356 00b4 BB61     		str	r3, [r7, #24]
 384:Core/Src/system_stm32h7xx.c ****     pllfracen = ((RCC->PLLCFGR & RCC_PLLCFGR_PLL1FRACEN)>>RCC_PLLCFGR_PLL1FRACEN_Pos);
 357              		.loc 1 384 22
 358 00b6 854B     		ldr	r3, .L24
 359 00b8 DB6A     		ldr	r3, [r3, #44]
 360              		.loc 1 384 15
 361 00ba 03F00103 		and	r3, r3, #1
 362 00be 7B61     		str	r3, [r7, #20]
 385:Core/Src/system_stm32h7xx.c ****     fracn1 = (float_t)(uint32_t)(pllfracen* ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1)>> 3));
ARM GAS  /var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccam3FTa.s 			page 14


 363              		.loc 1 385 50
 364 00c0 824B     		ldr	r3, .L24
 365 00c2 5B6B     		ldr	r3, [r3, #52]
 366              		.loc 1 385 85
 367 00c4 DB08     		lsrs	r3, r3, #3
 368 00c6 C3F30C03 		ubfx	r3, r3, #0, #13
 369              		.loc 1 385 23
 370 00ca 7A69     		ldr	r2, [r7, #20]
 371 00cc 02FB03F3 		mul	r3, r2, r3
 372              		.loc 1 385 12
 373 00d0 07EE903A 		vmov	s15, r3	@ int
 374 00d4 F8EE677A 		vcvt.f32.u32	s15, s15
 375 00d8 C7ED047A 		vstr.32	s15, [r7, #16]
 386:Core/Src/system_stm32h7xx.c **** 
 387:Core/Src/system_stm32h7xx.c ****     if (pllm != 0U)
 376              		.loc 1 387 8
 377 00dc BB69     		ldr	r3, [r7, #24]
 378 00de 002B     		cmp	r3, #0
 379 00e0 00F0C380 		beq	.L17
 388:Core/Src/system_stm32h7xx.c ****     {
 389:Core/Src/system_stm32h7xx.c ****       switch (pllsource)
 380              		.loc 1 389 7
 381 00e4 FB69     		ldr	r3, [r7, #28]
 382 00e6 022B     		cmp	r3, #2
 383 00e8 59D0     		beq	.L18
 384 00ea FB69     		ldr	r3, [r7, #28]
 385 00ec 022B     		cmp	r3, #2
 386 00ee 78D8     		bhi	.L19
 387 00f0 FB69     		ldr	r3, [r7, #28]
 388 00f2 002B     		cmp	r3, #0
 389 00f4 03D0     		beq	.L20
 390 00f6 FB69     		ldr	r3, [r7, #28]
 391 00f8 012B     		cmp	r3, #1
 392 00fa 2ED0     		beq	.L21
 393 00fc 71E0     		b	.L19
 394              	.L20:
 390:Core/Src/system_stm32h7xx.c ****       {
 391:Core/Src/system_stm32h7xx.c ****         case RCC_PLLCKSELR_PLLSRC_HSI:  /* HSI used as PLL clock source */
 392:Core/Src/system_stm32h7xx.c **** 
 393:Core/Src/system_stm32h7xx.c ****         hsivalue = (HSI_VALUE >> ((RCC->CR & RCC_CR_HSIDIV)>> 3)) ;
 395              		.loc 1 393 39
 396 00fe 734B     		ldr	r3, .L24
 397 0100 1B68     		ldr	r3, [r3]
 398              		.loc 1 393 60
 399 0102 DB08     		lsrs	r3, r3, #3
 400 0104 03F00303 		and	r3, r3, #3
 401              		.loc 1 393 18
 402 0108 714A     		ldr	r2, .L24+4
 403 010a 22FA03F3 		lsr	r3, r2, r3
 404 010e FB60     		str	r3, [r7, #12]
 394:Core/Src/system_stm32h7xx.c ****         pllvco = ( (float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PL
 405              		.loc 1 394 20
 406 0110 FB68     		ldr	r3, [r7, #12]
 407 0112 07EE903A 		vmov	s15, r3	@ int
 408 0116 F8EE676A 		vcvt.f32.u32	s13, s15
 409              		.loc 1 394 40
 410 011a BB69     		ldr	r3, [r7, #24]
ARM GAS  /var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccam3FTa.s 			page 15


 411 011c 07EE903A 		vmov	s15, r3	@ int
 412 0120 F8EE677A 		vcvt.f32.u32	s15, s15
 413              		.loc 1 394 38
 414 0124 86EEA77A 		vdiv.f32	s14, s13, s15
 415              		.loc 1 394 81
 416 0128 684B     		ldr	r3, .L24
 417 012a 1B6B     		ldr	r3, [r3, #48]
 418              		.loc 1 394 67
 419 012c C3F30803 		ubfx	r3, r3, #0, #9
 420              		.loc 1 394 58
 421 0130 07EE903A 		vmov	s15, r3	@ int
 422 0134 F8EE676A 		vcvt.f32.u32	s13, s15
 423              		.loc 1 394 120
 424 0138 97ED046A 		vldr.32	s12, [r7, #16]
 425 013c DFED675A 		vldr.32	s11, .L24+16
 426 0140 C6EE257A 		vdiv.f32	s15, s12, s11
 427              		.loc 1 394 111
 428 0144 76EEA77A 		vadd.f32	s15, s13, s15
 429              		.loc 1 394 138
 430 0148 F7EE006A 		vmov.f32	s13, #1.0e+0
 431 014c 77EEA67A 		vadd.f32	s15, s15, s13
 432              		.loc 1 394 16
 433 0150 67EE277A 		vmul.f32	s15, s14, s15
 434 0154 C7ED087A 		vstr.32	s15, [r7, #32]
 395:Core/Src/system_stm32h7xx.c **** 
 396:Core/Src/system_stm32h7xx.c ****         break;
 435              		.loc 1 396 9
 436 0158 71E0     		b	.L22
 437              	.L21:
 397:Core/Src/system_stm32h7xx.c **** 
 398:Core/Src/system_stm32h7xx.c ****         case RCC_PLLCKSELR_PLLSRC_CSI:  /* CSI used as PLL clock source */
 399:Core/Src/system_stm32h7xx.c ****           pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_
 438              		.loc 1 399 42
 439 015a BB69     		ldr	r3, [r7, #24]
 440 015c 07EE903A 		vmov	s15, r3	@ int
 441 0160 F8EE677A 		vcvt.f32.u32	s15, s15
 442              		.loc 1 399 40
 443 0164 DFED5E6A 		vldr.32	s13, .L24+20
 444 0168 86EEA77A 		vdiv.f32	s14, s13, s15
 445              		.loc 1 399 83
 446 016c 574B     		ldr	r3, .L24
 447 016e 1B6B     		ldr	r3, [r3, #48]
 448              		.loc 1 399 69
 449 0170 C3F30803 		ubfx	r3, r3, #0, #9
 450              		.loc 1 399 60
 451 0174 07EE903A 		vmov	s15, r3	@ int
 452 0178 F8EE676A 		vcvt.f32.u32	s13, s15
 453              		.loc 1 399 122
 454 017c 97ED046A 		vldr.32	s12, [r7, #16]
 455 0180 DFED565A 		vldr.32	s11, .L24+16
 456 0184 C6EE257A 		vdiv.f32	s15, s12, s11
 457              		.loc 1 399 113
 458 0188 76EEA77A 		vadd.f32	s15, s13, s15
 459              		.loc 1 399 140
 460 018c F7EE006A 		vmov.f32	s13, #1.0e+0
 461 0190 77EEA67A 		vadd.f32	s15, s15, s13
 462              		.loc 1 399 18
ARM GAS  /var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccam3FTa.s 			page 16


 463 0194 67EE277A 		vmul.f32	s15, s14, s15
 464 0198 C7ED087A 		vstr.32	s15, [r7, #32]
 400:Core/Src/system_stm32h7xx.c ****         break;
 465              		.loc 1 400 9
 466 019c 4FE0     		b	.L22
 467              	.L18:
 401:Core/Src/system_stm32h7xx.c **** 
 402:Core/Src/system_stm32h7xx.c ****         case RCC_PLLCKSELR_PLLSRC_HSE:  /* HSE used as PLL clock source */
 403:Core/Src/system_stm32h7xx.c ****           pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_
 468              		.loc 1 403 42
 469 019e BB69     		ldr	r3, [r7, #24]
 470 01a0 07EE903A 		vmov	s15, r3	@ int
 471 01a4 F8EE677A 		vcvt.f32.u32	s15, s15
 472              		.loc 1 403 40
 473 01a8 DFED4E6A 		vldr.32	s13, .L24+24
 474 01ac 86EEA77A 		vdiv.f32	s14, s13, s15
 475              		.loc 1 403 83
 476 01b0 464B     		ldr	r3, .L24
 477 01b2 1B6B     		ldr	r3, [r3, #48]
 478              		.loc 1 403 69
 479 01b4 C3F30803 		ubfx	r3, r3, #0, #9
 480              		.loc 1 403 60
 481 01b8 07EE903A 		vmov	s15, r3	@ int
 482 01bc F8EE676A 		vcvt.f32.u32	s13, s15
 483              		.loc 1 403 122
 484 01c0 97ED046A 		vldr.32	s12, [r7, #16]
 485 01c4 DFED455A 		vldr.32	s11, .L24+16
 486 01c8 C6EE257A 		vdiv.f32	s15, s12, s11
 487              		.loc 1 403 113
 488 01cc 76EEA77A 		vadd.f32	s15, s13, s15
 489              		.loc 1 403 140
 490 01d0 F7EE006A 		vmov.f32	s13, #1.0e+0
 491 01d4 77EEA67A 		vadd.f32	s15, s15, s13
 492              		.loc 1 403 18
 493 01d8 67EE277A 		vmul.f32	s15, s14, s15
 494 01dc C7ED087A 		vstr.32	s15, [r7, #32]
 404:Core/Src/system_stm32h7xx.c ****         break;
 495              		.loc 1 404 9
 496 01e0 2DE0     		b	.L22
 497              	.L19:
 405:Core/Src/system_stm32h7xx.c **** 
 406:Core/Src/system_stm32h7xx.c ****       default:
 407:Core/Src/system_stm32h7xx.c ****           hsivalue = (HSI_VALUE >> ((RCC->CR & RCC_CR_HSIDIV)>> 3)) ;
 498              		.loc 1 407 41
 499 01e2 3A4B     		ldr	r3, .L24
 500 01e4 1B68     		ldr	r3, [r3]
 501              		.loc 1 407 62
 502 01e6 DB08     		lsrs	r3, r3, #3
 503 01e8 03F00303 		and	r3, r3, #3
 504              		.loc 1 407 20
 505 01ec 384A     		ldr	r2, .L24+4
 506 01ee 22FA03F3 		lsr	r3, r2, r3
 507 01f2 FB60     		str	r3, [r7, #12]
 408:Core/Src/system_stm32h7xx.c ****           pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_P
 508              		.loc 1 408 21
 509 01f4 FB68     		ldr	r3, [r7, #12]
 510 01f6 07EE903A 		vmov	s15, r3	@ int
ARM GAS  /var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccam3FTa.s 			page 17


 511 01fa F8EE676A 		vcvt.f32.u32	s13, s15
 512              		.loc 1 408 41
 513 01fe BB69     		ldr	r3, [r7, #24]
 514 0200 07EE903A 		vmov	s15, r3	@ int
 515 0204 F8EE677A 		vcvt.f32.u32	s15, s15
 516              		.loc 1 408 39
 517 0208 86EEA77A 		vdiv.f32	s14, s13, s15
 518              		.loc 1 408 82
 519 020c 2F4B     		ldr	r3, .L24
 520 020e 1B6B     		ldr	r3, [r3, #48]
 521              		.loc 1 408 68
 522 0210 C3F30803 		ubfx	r3, r3, #0, #9
 523              		.loc 1 408 59
 524 0214 07EE903A 		vmov	s15, r3	@ int
 525 0218 F8EE676A 		vcvt.f32.u32	s13, s15
 526              		.loc 1 408 121
 527 021c 97ED046A 		vldr.32	s12, [r7, #16]
 528 0220 DFED2E5A 		vldr.32	s11, .L24+16
 529 0224 C6EE257A 		vdiv.f32	s15, s12, s11
 530              		.loc 1 408 112
 531 0228 76EEA77A 		vadd.f32	s15, s13, s15
 532              		.loc 1 408 139
 533 022c F7EE006A 		vmov.f32	s13, #1.0e+0
 534 0230 77EEA67A 		vadd.f32	s15, s15, s13
 535              		.loc 1 408 18
 536 0234 67EE277A 		vmul.f32	s15, s14, s15
 537 0238 C7ED087A 		vstr.32	s15, [r7, #32]
 409:Core/Src/system_stm32h7xx.c ****         break;
 538              		.loc 1 409 9
 539 023c 00BF     		nop
 540              	.L22:
 410:Core/Src/system_stm32h7xx.c ****       }
 411:Core/Src/system_stm32h7xx.c ****       pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >>9) + 1U ) ;
 541              		.loc 1 411 20
 542 023e 234B     		ldr	r3, .L24
 543 0240 1B6B     		ldr	r3, [r3, #48]
 544              		.loc 1 411 50
 545 0242 5B0A     		lsrs	r3, r3, #9
 546 0244 03F07F03 		and	r3, r3, #127
 547              		.loc 1 411 12
 548 0248 0133     		adds	r3, r3, #1
 549 024a BB60     		str	r3, [r7, #8]
 412:Core/Src/system_stm32h7xx.c ****       common_system_clock =  (uint32_t)(float_t)(pllvco/(float_t)pllp);
 550              		.loc 1 412 57
 551 024c BB68     		ldr	r3, [r7, #8]
 552 024e 07EE903A 		vmov	s15, r3	@ int
 553 0252 B8EE677A 		vcvt.f32.u32	s14, s15
 554              		.loc 1 412 40
 555 0256 D7ED086A 		vldr.32	s13, [r7, #32]
 556 025a C6EE877A 		vdiv.f32	s15, s13, s14
 557              		.loc 1 412 27
 558 025e FCEEE77A 		vcvt.u32.f32	s15, s15
 559 0262 17EE903A 		vmov	r3, s15	@ int
 560 0266 7B62     		str	r3, [r7, #36]
 413:Core/Src/system_stm32h7xx.c ****     }
 414:Core/Src/system_stm32h7xx.c ****     else
 415:Core/Src/system_stm32h7xx.c ****     {
ARM GAS  /var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccam3FTa.s 			page 18


 416:Core/Src/system_stm32h7xx.c ****       common_system_clock = 0U;
 417:Core/Src/system_stm32h7xx.c ****     }
 418:Core/Src/system_stm32h7xx.c ****     break;
 561              		.loc 1 418 5
 562 0268 0CE0     		b	.L16
 563              	.L17:
 416:Core/Src/system_stm32h7xx.c ****     }
 564              		.loc 1 416 27
 565 026a 0023     		movs	r3, #0
 566 026c 7B62     		str	r3, [r7, #36]
 567              		.loc 1 418 5
 568 026e 09E0     		b	.L16
 569              	.L10:
 419:Core/Src/system_stm32h7xx.c **** 
 420:Core/Src/system_stm32h7xx.c ****   default:
 421:Core/Src/system_stm32h7xx.c ****     common_system_clock = (uint32_t) (HSI_VALUE >> ((RCC->CR & RCC_CR_HSIDIV)>> 3));
 570              		.loc 1 421 57
 571 0270 164B     		ldr	r3, .L24
 572 0272 1B68     		ldr	r3, [r3]
 573              		.loc 1 421 78
 574 0274 DB08     		lsrs	r3, r3, #3
 575 0276 03F00303 		and	r3, r3, #3
 576              		.loc 1 421 25
 577 027a 154A     		ldr	r2, .L24+4
 578 027c 22FA03F3 		lsr	r3, r2, r3
 579 0280 7B62     		str	r3, [r7, #36]
 422:Core/Src/system_stm32h7xx.c ****     break;
 580              		.loc 1 422 5
 581 0282 00BF     		nop
 582              	.L16:
 423:Core/Src/system_stm32h7xx.c ****   }
 424:Core/Src/system_stm32h7xx.c **** 
 425:Core/Src/system_stm32h7xx.c ****   /* Compute SystemClock frequency --------------------------------------------------*/
 426:Core/Src/system_stm32h7xx.c **** #if defined (RCC_D1CFGR_D1CPRE)
 427:Core/Src/system_stm32h7xx.c ****   tmp = D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos];
 583              		.loc 1 427 30
 584 0284 114B     		ldr	r3, .L24
 585 0286 9B69     		ldr	r3, [r3, #24]
 586              		.loc 1 427 59
 587 0288 1B0A     		lsrs	r3, r3, #8
 588 028a 03F00F03 		and	r3, r3, #15
 589              		.loc 1 427 25
 590 028e 164A     		ldr	r2, .L24+28
 591 0290 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 592              		.loc 1 427 7
 593 0292 7B60     		str	r3, [r7, #4]
 428:Core/Src/system_stm32h7xx.c **** 
 429:Core/Src/system_stm32h7xx.c ****   /* common_system_clock frequency : CM7 CPU frequency  */
 430:Core/Src/system_stm32h7xx.c ****   common_system_clock >>= tmp;
 594              		.loc 1 430 23
 595 0294 7A6A     		ldr	r2, [r7, #36]
 596 0296 7B68     		ldr	r3, [r7, #4]
 597 0298 22FA03F3 		lsr	r3, r2, r3
 598 029c 7B62     		str	r3, [r7, #36]
 431:Core/Src/system_stm32h7xx.c **** 
 432:Core/Src/system_stm32h7xx.c ****   /* SystemD2Clock frequency : CM4 CPU, AXI and AHBs Clock frequency  */
 433:Core/Src/system_stm32h7xx.c ****   SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_
ARM GAS  /var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccam3FTa.s 			page 19


 599              		.loc 1 433 66
 600 029e 0B4B     		ldr	r3, .L24
 601 02a0 9B69     		ldr	r3, [r3, #24]
 602              		.loc 1 433 93
 603 02a2 03F00F03 		and	r3, r3, #15
 604              		.loc 1 433 61
 605 02a6 104A     		ldr	r2, .L24+28
 606 02a8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 607              		.loc 1 433 118
 608 02aa 03F01F03 		and	r3, r3, #31
 609              		.loc 1 433 40
 610 02ae 7A6A     		ldr	r2, [r7, #36]
 611 02b0 22FA03F3 		lsr	r3, r2, r3
 612              		.loc 1 433 17
 613 02b4 0D4A     		ldr	r2, .L24+32
 614 02b6 1360     		str	r3, [r2]
 434:Core/Src/system_stm32h7xx.c **** 
 435:Core/Src/system_stm32h7xx.c **** #else
 436:Core/Src/system_stm32h7xx.c ****   tmp = D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE)>> RCC_CDCFGR1_CDCPRE_Pos];
 437:Core/Src/system_stm32h7xx.c **** 
 438:Core/Src/system_stm32h7xx.c ****   /* common_system_clock frequency : CM7 CPU frequency  */
 439:Core/Src/system_stm32h7xx.c ****   common_system_clock >>= tmp;
 440:Core/Src/system_stm32h7xx.c **** 
 441:Core/Src/system_stm32h7xx.c ****   /* SystemD2Clock frequency : AXI and AHBs Clock frequency  */
 442:Core/Src/system_stm32h7xx.c ****   SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_HPRE)>> RC
 443:Core/Src/system_stm32h7xx.c **** 
 444:Core/Src/system_stm32h7xx.c **** #endif
 445:Core/Src/system_stm32h7xx.c **** 
 446:Core/Src/system_stm32h7xx.c **** #if defined(DUAL_CORE) && defined(CORE_CM4)
 447:Core/Src/system_stm32h7xx.c ****   SystemCoreClock = SystemD2Clock;
 448:Core/Src/system_stm32h7xx.c **** #else
 449:Core/Src/system_stm32h7xx.c ****   SystemCoreClock = common_system_clock;
 615              		.loc 1 449 19
 616 02b8 0D4A     		ldr	r2, .L24+36
 617 02ba 7B6A     		ldr	r3, [r7, #36]
 618 02bc 1360     		str	r3, [r2]
 450:Core/Src/system_stm32h7xx.c **** #endif /* DUAL_CORE && CORE_CM4 */
 451:Core/Src/system_stm32h7xx.c **** }
 619              		.loc 1 451 1
 620 02be 00BF     		nop
 621 02c0 2C37     		adds	r7, r7, #44
 622              	.LCFI7:
 623              		.cfi_def_cfa_offset 4
 624 02c2 BD46     		mov	sp, r7
 625              	.LCFI8:
 626              		.cfi_def_cfa_register 13
 627              		@ sp needed
 628 02c4 5DF8047B 		ldr	r7, [sp], #4
 629              	.LCFI9:
 630              		.cfi_restore 7
 631              		.cfi_def_cfa_offset 0
 632 02c8 7047     		bx	lr
 633              	.L25:
 634 02ca 00BF     		.align	2
 635              	.L24:
 636 02cc 00440258 		.word	1476543488
 637 02d0 0090D003 		.word	64000000
ARM GAS  /var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccam3FTa.s 			page 20


 638 02d4 00093D00 		.word	4000000
 639 02d8 40787D01 		.word	25000000
 640 02dc 00000046 		.word	1174405120
 641 02e0 0024744A 		.word	1249125376
 642 02e4 20BCBE4B 		.word	1270791200
 643 02e8 00000000 		.word	D1CorePrescTable
 644 02ec 00000000 		.word	SystemD2Clock
 645 02f0 00000000 		.word	SystemCoreClock
 646              		.cfi_endproc
 647              	.LFE145:
 649              		.section	.text.ExitRun0Mode,"ax",%progbits
 650              		.align	1
 651              		.global	ExitRun0Mode
 652              		.syntax unified
 653              		.thumb
 654              		.thumb_func
 656              	ExitRun0Mode:
 657              	.LFB146:
 452:Core/Src/system_stm32h7xx.c **** 
 453:Core/Src/system_stm32h7xx.c **** /**
 454:Core/Src/system_stm32h7xx.c ****   * @brief  Exit Run* mode and Configure the system Power Supply
 455:Core/Src/system_stm32h7xx.c ****   *
 456:Core/Src/system_stm32h7xx.c ****   * @note   This function exits the Run* mode and configures the system power supply
 457:Core/Src/system_stm32h7xx.c ****   *         according to the definition to be used at compilation preprocessing level.
 458:Core/Src/system_stm32h7xx.c ****   *         The application shall set one of the following configuration option:
 459:Core/Src/system_stm32h7xx.c ****   *           - PWR_LDO_SUPPLY
 460:Core/Src/system_stm32h7xx.c ****   *           - PWR_DIRECT_SMPS_SUPPLY
 461:Core/Src/system_stm32h7xx.c ****   *           - PWR_EXTERNAL_SOURCE_SUPPLY
 462:Core/Src/system_stm32h7xx.c ****   *           - PWR_SMPS_1V8_SUPPLIES_LDO
 463:Core/Src/system_stm32h7xx.c ****   *           - PWR_SMPS_2V5_SUPPLIES_LDO
 464:Core/Src/system_stm32h7xx.c ****   *           - PWR_SMPS_1V8_SUPPLIES_EXT_AND_LDO
 465:Core/Src/system_stm32h7xx.c ****   *           - PWR_SMPS_2V5_SUPPLIES_EXT_AND_LDO
 466:Core/Src/system_stm32h7xx.c ****   *           - PWR_SMPS_1V8_SUPPLIES_EXT
 467:Core/Src/system_stm32h7xx.c ****   *           - PWR_SMPS_2V5_SUPPLIES_EXT
 468:Core/Src/system_stm32h7xx.c ****   *
 469:Core/Src/system_stm32h7xx.c ****   * @note   The function modifies the PWR->CR3 register to enable or disable specific
 470:Core/Src/system_stm32h7xx.c ****   *         power supply modes and waits until the voltage level flag is set, indicating
 471:Core/Src/system_stm32h7xx.c ****   *         that the power supply configuration is stable.
 472:Core/Src/system_stm32h7xx.c ****   *
 473:Core/Src/system_stm32h7xx.c ****   * @param  None
 474:Core/Src/system_stm32h7xx.c ****   * @retval None
 475:Core/Src/system_stm32h7xx.c ****   */
 476:Core/Src/system_stm32h7xx.c **** void ExitRun0Mode(void)
 477:Core/Src/system_stm32h7xx.c **** {
 658              		.loc 1 477 1
 659              		.cfi_startproc
 660              		@ args = 0, pretend = 0, frame = 0
 661              		@ frame_needed = 1, uses_anonymous_args = 0
 662              		@ link register save eliminated.
 663 0000 80B4     		push	{r7}
 664              	.LCFI10:
 665              		.cfi_def_cfa_offset 4
 666              		.cfi_offset 7, -4
 667 0002 00AF     		add	r7, sp, #0
 668              	.LCFI11:
 669              		.cfi_def_cfa_register 7
 478:Core/Src/system_stm32h7xx.c **** #if defined(USE_PWR_LDO_SUPPLY)
ARM GAS  /var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccam3FTa.s 			page 21


 479:Core/Src/system_stm32h7xx.c ****   #if defined(SMPS)
 480:Core/Src/system_stm32h7xx.c ****     /* Exit Run* mode by disabling SMPS and enabling LDO */
 481:Core/Src/system_stm32h7xx.c ****     PWR->CR3 = (PWR->CR3 & ~PWR_CR3_SMPSEN) | PWR_CR3_LDOEN;
 482:Core/Src/system_stm32h7xx.c ****   #else
 483:Core/Src/system_stm32h7xx.c ****     /* Enable LDO mode */
 484:Core/Src/system_stm32h7xx.c ****     PWR->CR3 |= PWR_CR3_LDOEN;
 670              		.loc 1 484 8
 671 0004 094B     		ldr	r3, .L28
 672 0006 DB68     		ldr	r3, [r3, #12]
 673 0008 084A     		ldr	r2, .L28
 674              		.loc 1 484 14
 675 000a 43F00203 		orr	r3, r3, #2
 676 000e D360     		str	r3, [r2, #12]
 485:Core/Src/system_stm32h7xx.c ****   #endif /* SMPS */
 486:Core/Src/system_stm32h7xx.c ****   /* Wait till voltage level flag is set */
 487:Core/Src/system_stm32h7xx.c ****   while ((PWR->CSR1 & PWR_CSR1_ACTVOSRDY) == 0U)
 677              		.loc 1 487 9
 678 0010 00BF     		nop
 679              	.L27:
 680              		.loc 1 487 14 discriminator 1
 681 0012 064B     		ldr	r3, .L28
 682 0014 5B68     		ldr	r3, [r3, #4]
 683              		.loc 1 487 21 discriminator 1
 684 0016 03F40053 		and	r3, r3, #8192
 685              		.loc 1 487 43 discriminator 1
 686 001a 002B     		cmp	r3, #0
 687 001c F9D0     		beq	.L27
 488:Core/Src/system_stm32h7xx.c ****   {}
 489:Core/Src/system_stm32h7xx.c **** #elif defined(USE_PWR_EXTERNAL_SOURCE_SUPPLY)
 490:Core/Src/system_stm32h7xx.c ****   #if defined(SMPS)
 491:Core/Src/system_stm32h7xx.c ****     /* Exit Run* mode */
 492:Core/Src/system_stm32h7xx.c ****     PWR->CR3 = (PWR->CR3 & ~(PWR_CR3_SMPSEN | PWR_CR3_LDOEN)) | PWR_CR3_BYPASS;
 493:Core/Src/system_stm32h7xx.c ****   #else
 494:Core/Src/system_stm32h7xx.c ****     PWR->CR3 = (PWR->CR3 & ~(PWR_CR3_LDOEN)) | PWR_CR3_BYPASS;
 495:Core/Src/system_stm32h7xx.c ****   #endif /* SMPS */
 496:Core/Src/system_stm32h7xx.c ****   /* Wait till voltage level flag is set */
 497:Core/Src/system_stm32h7xx.c ****   while ((PWR->CSR1 & PWR_CSR1_ACTVOSRDY) == 0U)
 498:Core/Src/system_stm32h7xx.c ****   {}
 499:Core/Src/system_stm32h7xx.c **** #elif defined(USE_PWR_DIRECT_SMPS_SUPPLY) && defined(SMPS)
 500:Core/Src/system_stm32h7xx.c ****   /* Exit Run* mode */
 501:Core/Src/system_stm32h7xx.c ****   PWR->CR3 &= ~(PWR_CR3_LDOEN);
 502:Core/Src/system_stm32h7xx.c ****   /* Wait till voltage level flag is set */
 503:Core/Src/system_stm32h7xx.c ****   while ((PWR->CSR1 & PWR_CSR1_ACTVOSRDY) == 0U)
 504:Core/Src/system_stm32h7xx.c ****   {}
 505:Core/Src/system_stm32h7xx.c **** #elif defined(USE_PWR_SMPS_1V8_SUPPLIES_LDO) && defined(SMPS)
 506:Core/Src/system_stm32h7xx.c ****   /* Exit Run* mode */
 507:Core/Src/system_stm32h7xx.c ****   PWR->CR3 |= PWR_CR3_SMPSLEVEL_0 | PWR_CR3_SMPSEN | PWR_CR3_LDOEN;
 508:Core/Src/system_stm32h7xx.c ****   /* Wait till voltage level flag is set */
 509:Core/Src/system_stm32h7xx.c ****   while ((PWR->CSR1 & PWR_CSR1_ACTVOSRDY) == 0U)
 510:Core/Src/system_stm32h7xx.c ****   {}
 511:Core/Src/system_stm32h7xx.c **** #elif defined(USE_PWR_SMPS_2V5_SUPPLIES_LDO) && defined(SMPS)
 512:Core/Src/system_stm32h7xx.c ****   /* Exit Run* mode */
 513:Core/Src/system_stm32h7xx.c ****   PWR->CR3 |= PWR_CR3_SMPSLEVEL_1 | PWR_CR3_SMPSEN | PWR_CR3_LDOEN;
 514:Core/Src/system_stm32h7xx.c ****   /* Wait till voltage level flag is set */
 515:Core/Src/system_stm32h7xx.c ****   while ((PWR->CSR1 & PWR_CSR1_ACTVOSRDY) == 0U)
 516:Core/Src/system_stm32h7xx.c ****   {}
 517:Core/Src/system_stm32h7xx.c **** #elif defined(USE_PWR_SMPS_1V8_SUPPLIES_EXT_AND_LDO) && defined(SMPS)
ARM GAS  /var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccam3FTa.s 			page 22


 518:Core/Src/system_stm32h7xx.c ****   /* Exit Run* mode */
 519:Core/Src/system_stm32h7xx.c ****   PWR->CR3 |= PWR_CR3_SMPSLEVEL_0 | PWR_CR3_SMPSEXTHP | PWR_CR3_SMPSEN | PWR_CR3_LDOEN;
 520:Core/Src/system_stm32h7xx.c ****   /* Wait till voltage level flag is set */
 521:Core/Src/system_stm32h7xx.c ****   while ((PWR->CSR1 & PWR_CSR1_ACTVOSRDY) == 0U)
 522:Core/Src/system_stm32h7xx.c ****   {}
 523:Core/Src/system_stm32h7xx.c **** #elif defined(USE_PWR_SMPS_2V5_SUPPLIES_EXT_AND_LDO) && defined(SMPS)
 524:Core/Src/system_stm32h7xx.c ****   /* Exit Run* mode */
 525:Core/Src/system_stm32h7xx.c ****   PWR->CR3 |= PWR_CR3_SMPSLEVEL_1 | PWR_CR3_SMPSEXTHP | PWR_CR3_SMPSEN | PWR_CR3_LDOEN;
 526:Core/Src/system_stm32h7xx.c ****   /* Wait till voltage level flag is set */
 527:Core/Src/system_stm32h7xx.c ****   while ((PWR->CSR1 & PWR_CSR1_ACTVOSRDY) == 0U)
 528:Core/Src/system_stm32h7xx.c ****   {}
 529:Core/Src/system_stm32h7xx.c **** #elif defined(USE_PWR_SMPS_1V8_SUPPLIES_EXT) && defined(SMPS)
 530:Core/Src/system_stm32h7xx.c ****   /* Exit Run* mode */
 531:Core/Src/system_stm32h7xx.c ****   PWR->CR3 = (PWR->CR3 & ~(PWR_CR3_LDOEN)) | PWR_CR3_SMPSLEVEL_0 | PWR_CR3_SMPSEXTHP | PWR_CR3_SMPS
 532:Core/Src/system_stm32h7xx.c ****   /* Wait till voltage level flag is set */
 533:Core/Src/system_stm32h7xx.c ****   while ((PWR->CSR1 & PWR_CSR1_ACTVOSRDY) == 0U)
 534:Core/Src/system_stm32h7xx.c ****   {}
 535:Core/Src/system_stm32h7xx.c **** #elif defined(USE_PWR_SMPS_2V5_SUPPLIES_EXT) && defined(SMPS)
 536:Core/Src/system_stm32h7xx.c ****   /* Exit Run* mode */
 537:Core/Src/system_stm32h7xx.c ****   PWR->CR3 = (PWR->CR3 & ~(PWR_CR3_LDOEN)) | PWR_CR3_SMPSLEVEL_1 | PWR_CR3_SMPSEXTHP | PWR_CR3_SMPS
 538:Core/Src/system_stm32h7xx.c ****   /* Wait till voltage level flag is set */
 539:Core/Src/system_stm32h7xx.c ****   while ((PWR->CSR1 & PWR_CSR1_ACTVOSRDY) == 0U)
 540:Core/Src/system_stm32h7xx.c ****   {}
 541:Core/Src/system_stm32h7xx.c **** #else
 542:Core/Src/system_stm32h7xx.c ****   /* No system power supply configuration is selected at exit Run* mode */
 543:Core/Src/system_stm32h7xx.c **** #endif /* USE_PWR_LDO_SUPPLY */
 544:Core/Src/system_stm32h7xx.c **** }
 688              		.loc 1 544 1
 689 001e 00BF     		nop
 690 0020 00BF     		nop
 691 0022 BD46     		mov	sp, r7
 692              	.LCFI12:
 693              		.cfi_def_cfa_register 13
 694              		@ sp needed
 695 0024 5DF8047B 		ldr	r7, [sp], #4
 696              	.LCFI13:
 697              		.cfi_restore 7
 698              		.cfi_def_cfa_offset 0
 699 0028 7047     		bx	lr
 700              	.L29:
 701 002a 00BF     		.align	2
 702              	.L28:
 703 002c 00480258 		.word	1476544512
 704              		.cfi_endproc
 705              	.LFE146:
 707              		.text
 708              	.Letext0:
 709              		.file 2 "/Users/zhy/Tools/xpack-arm-none-eabi-gcc-14.2.1-1.1/arm-none-eabi/include/machine/_defaul
 710              		.file 3 "/Users/zhy/Tools/xpack-arm-none-eabi-gcc-14.2.1-1.1/arm-none-eabi/include/sys/_stdint.h"
 711              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 712              		.file 5 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 713              		.file 6 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h743xx.h"
 714              		.file 7 "/Users/zhy/Tools/xpack-arm-none-eabi-gcc-14.2.1-1.1/arm-none-eabi/include/math.h"
ARM GAS  /var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccam3FTa.s 			page 23


DEFINED SYMBOLS
                            *ABS*:00000000 system_stm32h7xx.c
/var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccam3FTa.s:24     .data.SystemCoreClock:00000000 SystemCoreClock
/var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccam3FTa.s:21     .data.SystemCoreClock:00000000 $d
/var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccam3FTa.s:31     .data.SystemD2Clock:00000000 SystemD2Clock
/var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccam3FTa.s:28     .data.SystemD2Clock:00000000 $d
/var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccam3FTa.s:38     .rodata.D1CorePrescTable:00000000 D1CorePrescTable
/var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccam3FTa.s:35     .rodata.D1CorePrescTable:00000000 $d
/var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccam3FTa.s:42     .text.SystemInit:00000000 $t
/var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccam3FTa.s:48     .text.SystemInit:00000000 SystemInit
/var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccam3FTa.s:241    .text.SystemInit:00000114 $d
/var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccam3FTa.s:256    .text.SystemCoreClockUpdate:00000000 $t
/var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccam3FTa.s:262    .text.SystemCoreClockUpdate:00000000 SystemCoreClockUpdate
/var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccam3FTa.s:291    .text.SystemCoreClockUpdate:0000001c $d
/var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccam3FTa.s:316    .text.SystemCoreClockUpdate:00000080 $t
/var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccam3FTa.s:636    .text.SystemCoreClockUpdate:000002cc $d
/var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccam3FTa.s:650    .text.ExitRun0Mode:00000000 $t
/var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccam3FTa.s:656    .text.ExitRun0Mode:00000000 ExitRun0Mode
/var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccam3FTa.s:703    .text.ExitRun0Mode:0000002c $d

NO UNDEFINED SYMBOLS
