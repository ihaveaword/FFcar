ARM GAS  /var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccbyT2Nj.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"stm32h7xx_it.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.file 1 "Core/Src/stm32h7xx_it.c"
  19              		.section	.text.NMI_Handler,"ax",%progbits
  20              		.align	1
  21              		.global	NMI_Handler
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	NMI_Handler:
  27              	.LFB144:
   1:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32h7xx_it.c **** /**
   3:Core/Src/stm32h7xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32h7xx_it.c ****   * @file    stm32h7xx_it.c
   5:Core/Src/stm32h7xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32h7xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32h7xx_it.c ****   * @attention
   8:Core/Src/stm32h7xx_it.c ****   *
   9:Core/Src/stm32h7xx_it.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/stm32h7xx_it.c ****   * All rights reserved.
  11:Core/Src/stm32h7xx_it.c ****   *
  12:Core/Src/stm32h7xx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/stm32h7xx_it.c ****   * in the root directory of this software component.
  14:Core/Src/stm32h7xx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/stm32h7xx_it.c ****   *
  16:Core/Src/stm32h7xx_it.c ****   ******************************************************************************
  17:Core/Src/stm32h7xx_it.c ****   */
  18:Core/Src/stm32h7xx_it.c **** /* USER CODE END Header */
  19:Core/Src/stm32h7xx_it.c **** 
  20:Core/Src/stm32h7xx_it.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/stm32h7xx_it.c **** #include "main.h"
  22:Core/Src/stm32h7xx_it.c **** #include "stm32h7xx_it.h"
  23:Core/Src/stm32h7xx_it.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/stm32h7xx_it.c **** /* USER CODE END Includes */
  26:Core/Src/stm32h7xx_it.c **** 
  27:Core/Src/stm32h7xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN TD */
  29:Core/Src/stm32h7xx_it.c **** 
  30:Core/Src/stm32h7xx_it.c **** /* USER CODE END TD */
  31:Core/Src/stm32h7xx_it.c **** 
ARM GAS  /var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccbyT2Nj.s 			page 2


  32:Core/Src/stm32h7xx_it.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN PD */
  34:Core/Src/stm32h7xx_it.c **** 
  35:Core/Src/stm32h7xx_it.c **** /* USER CODE END PD */
  36:Core/Src/stm32h7xx_it.c **** 
  37:Core/Src/stm32h7xx_it.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN PM */
  39:Core/Src/stm32h7xx_it.c **** 
  40:Core/Src/stm32h7xx_it.c **** /* USER CODE END PM */
  41:Core/Src/stm32h7xx_it.c **** 
  42:Core/Src/stm32h7xx_it.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN PV */
  44:Core/Src/stm32h7xx_it.c **** 
  45:Core/Src/stm32h7xx_it.c **** /* USER CODE END PV */
  46:Core/Src/stm32h7xx_it.c **** 
  47:Core/Src/stm32h7xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  48:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN PFP */
  49:Core/Src/stm32h7xx_it.c **** 
  50:Core/Src/stm32h7xx_it.c **** /* USER CODE END PFP */
  51:Core/Src/stm32h7xx_it.c **** 
  52:Core/Src/stm32h7xx_it.c **** /* Private user code ---------------------------------------------------------*/
  53:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN 0 */
  54:Core/Src/stm32h7xx_it.c **** 
  55:Core/Src/stm32h7xx_it.c **** /* USER CODE END 0 */
  56:Core/Src/stm32h7xx_it.c **** 
  57:Core/Src/stm32h7xx_it.c **** /* External variables --------------------------------------------------------*/
  58:Core/Src/stm32h7xx_it.c **** 
  59:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN EV */
  60:Core/Src/stm32h7xx_it.c **** 
  61:Core/Src/stm32h7xx_it.c **** /* USER CODE END EV */
  62:Core/Src/stm32h7xx_it.c **** 
  63:Core/Src/stm32h7xx_it.c **** /******************************************************************************/
  64:Core/Src/stm32h7xx_it.c **** /*           Cortex Processor Interruption and Exception Handlers          */
  65:Core/Src/stm32h7xx_it.c **** /******************************************************************************/
  66:Core/Src/stm32h7xx_it.c **** /**
  67:Core/Src/stm32h7xx_it.c ****   * @brief This function handles Non maskable interrupt.
  68:Core/Src/stm32h7xx_it.c ****   */
  69:Core/Src/stm32h7xx_it.c **** void NMI_Handler(void)
  70:Core/Src/stm32h7xx_it.c **** {
  28              		.loc 1 70 1
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 7, -4
  37 0002 00AF     		add	r7, sp, #0
  38              	.LCFI1:
  39              		.cfi_def_cfa_register 7
  40              	.L2:
  71:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  72:Core/Src/stm32h7xx_it.c **** 
  73:Core/Src/stm32h7xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  74:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  75:Core/Src/stm32h7xx_it.c ****    while (1)
ARM GAS  /var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccbyT2Nj.s 			page 3


  41              		.loc 1 75 10
  42 0004 00BF     		nop
  43 0006 FDE7     		b	.L2
  44              		.cfi_endproc
  45              	.LFE144:
  47              		.section	.text.HardFault_Handler,"ax",%progbits
  48              		.align	1
  49              		.global	HardFault_Handler
  50              		.syntax unified
  51              		.thumb
  52              		.thumb_func
  54              	HardFault_Handler:
  55              	.LFB145:
  76:Core/Src/stm32h7xx_it.c ****   {
  77:Core/Src/stm32h7xx_it.c ****   }
  78:Core/Src/stm32h7xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  79:Core/Src/stm32h7xx_it.c **** }
  80:Core/Src/stm32h7xx_it.c **** 
  81:Core/Src/stm32h7xx_it.c **** /**
  82:Core/Src/stm32h7xx_it.c ****   * @brief This function handles Hard fault interrupt.
  83:Core/Src/stm32h7xx_it.c ****   */
  84:Core/Src/stm32h7xx_it.c **** void HardFault_Handler(void)
  85:Core/Src/stm32h7xx_it.c **** {
  56              		.loc 1 85 1
  57              		.cfi_startproc
  58              		@ args = 0, pretend = 0, frame = 0
  59              		@ frame_needed = 1, uses_anonymous_args = 0
  60              		@ link register save eliminated.
  61 0000 80B4     		push	{r7}
  62              	.LCFI2:
  63              		.cfi_def_cfa_offset 4
  64              		.cfi_offset 7, -4
  65 0002 00AF     		add	r7, sp, #0
  66              	.LCFI3:
  67              		.cfi_def_cfa_register 7
  68              	.L4:
  86:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  87:Core/Src/stm32h7xx_it.c **** 
  88:Core/Src/stm32h7xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  89:Core/Src/stm32h7xx_it.c ****   while (1)
  69              		.loc 1 89 9
  70 0004 00BF     		nop
  71 0006 FDE7     		b	.L4
  72              		.cfi_endproc
  73              	.LFE145:
  75              		.section	.text.MemManage_Handler,"ax",%progbits
  76              		.align	1
  77              		.global	MemManage_Handler
  78              		.syntax unified
  79              		.thumb
  80              		.thumb_func
  82              	MemManage_Handler:
  83              	.LFB146:
  90:Core/Src/stm32h7xx_it.c ****   {
  91:Core/Src/stm32h7xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  92:Core/Src/stm32h7xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  93:Core/Src/stm32h7xx_it.c ****   }
ARM GAS  /var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccbyT2Nj.s 			page 4


  94:Core/Src/stm32h7xx_it.c **** }
  95:Core/Src/stm32h7xx_it.c **** 
  96:Core/Src/stm32h7xx_it.c **** /**
  97:Core/Src/stm32h7xx_it.c ****   * @brief This function handles Memory management fault.
  98:Core/Src/stm32h7xx_it.c ****   */
  99:Core/Src/stm32h7xx_it.c **** void MemManage_Handler(void)
 100:Core/Src/stm32h7xx_it.c **** {
  84              		.loc 1 100 1
  85              		.cfi_startproc
  86              		@ args = 0, pretend = 0, frame = 0
  87              		@ frame_needed = 1, uses_anonymous_args = 0
  88              		@ link register save eliminated.
  89 0000 80B4     		push	{r7}
  90              	.LCFI4:
  91              		.cfi_def_cfa_offset 4
  92              		.cfi_offset 7, -4
  93 0002 00AF     		add	r7, sp, #0
  94              	.LCFI5:
  95              		.cfi_def_cfa_register 7
  96              	.L6:
 101:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 102:Core/Src/stm32h7xx_it.c **** 
 103:Core/Src/stm32h7xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 104:Core/Src/stm32h7xx_it.c ****   while (1)
  97              		.loc 1 104 9
  98 0004 00BF     		nop
  99 0006 FDE7     		b	.L6
 100              		.cfi_endproc
 101              	.LFE146:
 103              		.section	.text.BusFault_Handler,"ax",%progbits
 104              		.align	1
 105              		.global	BusFault_Handler
 106              		.syntax unified
 107              		.thumb
 108              		.thumb_func
 110              	BusFault_Handler:
 111              	.LFB147:
 105:Core/Src/stm32h7xx_it.c ****   {
 106:Core/Src/stm32h7xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 107:Core/Src/stm32h7xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 108:Core/Src/stm32h7xx_it.c ****   }
 109:Core/Src/stm32h7xx_it.c **** }
 110:Core/Src/stm32h7xx_it.c **** 
 111:Core/Src/stm32h7xx_it.c **** /**
 112:Core/Src/stm32h7xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 113:Core/Src/stm32h7xx_it.c ****   */
 114:Core/Src/stm32h7xx_it.c **** void BusFault_Handler(void)
 115:Core/Src/stm32h7xx_it.c **** {
 112              		.loc 1 115 1
 113              		.cfi_startproc
 114              		@ args = 0, pretend = 0, frame = 0
 115              		@ frame_needed = 1, uses_anonymous_args = 0
 116              		@ link register save eliminated.
 117 0000 80B4     		push	{r7}
 118              	.LCFI6:
 119              		.cfi_def_cfa_offset 4
 120              		.cfi_offset 7, -4
ARM GAS  /var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccbyT2Nj.s 			page 5


 121 0002 00AF     		add	r7, sp, #0
 122              	.LCFI7:
 123              		.cfi_def_cfa_register 7
 124              	.L8:
 116:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 117:Core/Src/stm32h7xx_it.c **** 
 118:Core/Src/stm32h7xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 119:Core/Src/stm32h7xx_it.c ****   while (1)
 125              		.loc 1 119 9
 126 0004 00BF     		nop
 127 0006 FDE7     		b	.L8
 128              		.cfi_endproc
 129              	.LFE147:
 131              		.section	.text.UsageFault_Handler,"ax",%progbits
 132              		.align	1
 133              		.global	UsageFault_Handler
 134              		.syntax unified
 135              		.thumb
 136              		.thumb_func
 138              	UsageFault_Handler:
 139              	.LFB148:
 120:Core/Src/stm32h7xx_it.c ****   {
 121:Core/Src/stm32h7xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 122:Core/Src/stm32h7xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 123:Core/Src/stm32h7xx_it.c ****   }
 124:Core/Src/stm32h7xx_it.c **** }
 125:Core/Src/stm32h7xx_it.c **** 
 126:Core/Src/stm32h7xx_it.c **** /**
 127:Core/Src/stm32h7xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 128:Core/Src/stm32h7xx_it.c ****   */
 129:Core/Src/stm32h7xx_it.c **** void UsageFault_Handler(void)
 130:Core/Src/stm32h7xx_it.c **** {
 140              		.loc 1 130 1
 141              		.cfi_startproc
 142              		@ args = 0, pretend = 0, frame = 0
 143              		@ frame_needed = 1, uses_anonymous_args = 0
 144              		@ link register save eliminated.
 145 0000 80B4     		push	{r7}
 146              	.LCFI8:
 147              		.cfi_def_cfa_offset 4
 148              		.cfi_offset 7, -4
 149 0002 00AF     		add	r7, sp, #0
 150              	.LCFI9:
 151              		.cfi_def_cfa_register 7
 152              	.L10:
 131:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 132:Core/Src/stm32h7xx_it.c **** 
 133:Core/Src/stm32h7xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 134:Core/Src/stm32h7xx_it.c ****   while (1)
 153              		.loc 1 134 9
 154 0004 00BF     		nop
 155 0006 FDE7     		b	.L10
 156              		.cfi_endproc
 157              	.LFE148:
 159              		.section	.text.SVC_Handler,"ax",%progbits
 160              		.align	1
 161              		.global	SVC_Handler
ARM GAS  /var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccbyT2Nj.s 			page 6


 162              		.syntax unified
 163              		.thumb
 164              		.thumb_func
 166              	SVC_Handler:
 167              	.LFB149:
 135:Core/Src/stm32h7xx_it.c ****   {
 136:Core/Src/stm32h7xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 137:Core/Src/stm32h7xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 138:Core/Src/stm32h7xx_it.c ****   }
 139:Core/Src/stm32h7xx_it.c **** }
 140:Core/Src/stm32h7xx_it.c **** 
 141:Core/Src/stm32h7xx_it.c **** /**
 142:Core/Src/stm32h7xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 143:Core/Src/stm32h7xx_it.c ****   */
 144:Core/Src/stm32h7xx_it.c **** void SVC_Handler(void)
 145:Core/Src/stm32h7xx_it.c **** {
 168              		.loc 1 145 1
 169              		.cfi_startproc
 170              		@ args = 0, pretend = 0, frame = 0
 171              		@ frame_needed = 1, uses_anonymous_args = 0
 172              		@ link register save eliminated.
 173 0000 80B4     		push	{r7}
 174              	.LCFI10:
 175              		.cfi_def_cfa_offset 4
 176              		.cfi_offset 7, -4
 177 0002 00AF     		add	r7, sp, #0
 178              	.LCFI11:
 179              		.cfi_def_cfa_register 7
 146:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 147:Core/Src/stm32h7xx_it.c **** 
 148:Core/Src/stm32h7xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 149:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 150:Core/Src/stm32h7xx_it.c **** 
 151:Core/Src/stm32h7xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 152:Core/Src/stm32h7xx_it.c **** }
 180              		.loc 1 152 1
 181 0004 00BF     		nop
 182 0006 BD46     		mov	sp, r7
 183              	.LCFI12:
 184              		.cfi_def_cfa_register 13
 185              		@ sp needed
 186 0008 5DF8047B 		ldr	r7, [sp], #4
 187              	.LCFI13:
 188              		.cfi_restore 7
 189              		.cfi_def_cfa_offset 0
 190 000c 7047     		bx	lr
 191              		.cfi_endproc
 192              	.LFE149:
 194              		.section	.text.DebugMon_Handler,"ax",%progbits
 195              		.align	1
 196              		.global	DebugMon_Handler
 197              		.syntax unified
 198              		.thumb
 199              		.thumb_func
 201              	DebugMon_Handler:
 202              	.LFB150:
 153:Core/Src/stm32h7xx_it.c **** 
ARM GAS  /var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccbyT2Nj.s 			page 7


 154:Core/Src/stm32h7xx_it.c **** /**
 155:Core/Src/stm32h7xx_it.c ****   * @brief This function handles Debug monitor.
 156:Core/Src/stm32h7xx_it.c ****   */
 157:Core/Src/stm32h7xx_it.c **** void DebugMon_Handler(void)
 158:Core/Src/stm32h7xx_it.c **** {
 203              		.loc 1 158 1
 204              		.cfi_startproc
 205              		@ args = 0, pretend = 0, frame = 0
 206              		@ frame_needed = 1, uses_anonymous_args = 0
 207              		@ link register save eliminated.
 208 0000 80B4     		push	{r7}
 209              	.LCFI14:
 210              		.cfi_def_cfa_offset 4
 211              		.cfi_offset 7, -4
 212 0002 00AF     		add	r7, sp, #0
 213              	.LCFI15:
 214              		.cfi_def_cfa_register 7
 159:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 160:Core/Src/stm32h7xx_it.c **** 
 161:Core/Src/stm32h7xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 162:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 163:Core/Src/stm32h7xx_it.c **** 
 164:Core/Src/stm32h7xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 165:Core/Src/stm32h7xx_it.c **** }
 215              		.loc 1 165 1
 216 0004 00BF     		nop
 217 0006 BD46     		mov	sp, r7
 218              	.LCFI16:
 219              		.cfi_def_cfa_register 13
 220              		@ sp needed
 221 0008 5DF8047B 		ldr	r7, [sp], #4
 222              	.LCFI17:
 223              		.cfi_restore 7
 224              		.cfi_def_cfa_offset 0
 225 000c 7047     		bx	lr
 226              		.cfi_endproc
 227              	.LFE150:
 229              		.section	.text.PendSV_Handler,"ax",%progbits
 230              		.align	1
 231              		.global	PendSV_Handler
 232              		.syntax unified
 233              		.thumb
 234              		.thumb_func
 236              	PendSV_Handler:
 237              	.LFB151:
 166:Core/Src/stm32h7xx_it.c **** 
 167:Core/Src/stm32h7xx_it.c **** /**
 168:Core/Src/stm32h7xx_it.c ****   * @brief This function handles Pendable request for system service.
 169:Core/Src/stm32h7xx_it.c ****   */
 170:Core/Src/stm32h7xx_it.c **** void PendSV_Handler(void)
 171:Core/Src/stm32h7xx_it.c **** {
 238              		.loc 1 171 1
 239              		.cfi_startproc
 240              		@ args = 0, pretend = 0, frame = 0
 241              		@ frame_needed = 1, uses_anonymous_args = 0
 242              		@ link register save eliminated.
 243 0000 80B4     		push	{r7}
ARM GAS  /var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccbyT2Nj.s 			page 8


 244              	.LCFI18:
 245              		.cfi_def_cfa_offset 4
 246              		.cfi_offset 7, -4
 247 0002 00AF     		add	r7, sp, #0
 248              	.LCFI19:
 249              		.cfi_def_cfa_register 7
 172:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 173:Core/Src/stm32h7xx_it.c **** 
 174:Core/Src/stm32h7xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 175:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 176:Core/Src/stm32h7xx_it.c **** 
 177:Core/Src/stm32h7xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 178:Core/Src/stm32h7xx_it.c **** }
 250              		.loc 1 178 1
 251 0004 00BF     		nop
 252 0006 BD46     		mov	sp, r7
 253              	.LCFI20:
 254              		.cfi_def_cfa_register 13
 255              		@ sp needed
 256 0008 5DF8047B 		ldr	r7, [sp], #4
 257              	.LCFI21:
 258              		.cfi_restore 7
 259              		.cfi_def_cfa_offset 0
 260 000c 7047     		bx	lr
 261              		.cfi_endproc
 262              	.LFE151:
 264              		.section	.text.SysTick_Handler,"ax",%progbits
 265              		.align	1
 266              		.global	SysTick_Handler
 267              		.syntax unified
 268              		.thumb
 269              		.thumb_func
 271              	SysTick_Handler:
 272              	.LFB152:
 179:Core/Src/stm32h7xx_it.c **** 
 180:Core/Src/stm32h7xx_it.c **** /**
 181:Core/Src/stm32h7xx_it.c ****   * @brief This function handles System tick timer.
 182:Core/Src/stm32h7xx_it.c ****   */
 183:Core/Src/stm32h7xx_it.c **** void SysTick_Handler(void)
 184:Core/Src/stm32h7xx_it.c **** {
 273              		.loc 1 184 1
 274              		.cfi_startproc
 275              		@ args = 0, pretend = 0, frame = 0
 276              		@ frame_needed = 1, uses_anonymous_args = 0
 277 0000 80B5     		push	{r7, lr}
 278              	.LCFI22:
 279              		.cfi_def_cfa_offset 8
 280              		.cfi_offset 7, -8
 281              		.cfi_offset 14, -4
 282 0002 00AF     		add	r7, sp, #0
 283              	.LCFI23:
 284              		.cfi_def_cfa_register 7
 185:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 186:Core/Src/stm32h7xx_it.c **** 
 187:Core/Src/stm32h7xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 188:Core/Src/stm32h7xx_it.c ****   HAL_IncTick();
 285              		.loc 1 188 3
ARM GAS  /var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccbyT2Nj.s 			page 9


 286 0004 FFF7FEFF 		bl	HAL_IncTick
 189:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 190:Core/Src/stm32h7xx_it.c **** 
 191:Core/Src/stm32h7xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 192:Core/Src/stm32h7xx_it.c **** }
 287              		.loc 1 192 1
 288 0008 00BF     		nop
 289 000a 80BD     		pop	{r7, pc}
 290              		.cfi_endproc
 291              	.LFE152:
 293              		.text
 294              	.Letext0:
 295              		.file 2 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
ARM GAS  /var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccbyT2Nj.s 			page 10


DEFINED SYMBOLS
                            *ABS*:00000000 stm32h7xx_it.c
/var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccbyT2Nj.s:20     .text.NMI_Handler:00000000 $t
/var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccbyT2Nj.s:26     .text.NMI_Handler:00000000 NMI_Handler
/var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccbyT2Nj.s:48     .text.HardFault_Handler:00000000 $t
/var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccbyT2Nj.s:54     .text.HardFault_Handler:00000000 HardFault_Handler
/var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccbyT2Nj.s:76     .text.MemManage_Handler:00000000 $t
/var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccbyT2Nj.s:82     .text.MemManage_Handler:00000000 MemManage_Handler
/var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccbyT2Nj.s:104    .text.BusFault_Handler:00000000 $t
/var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccbyT2Nj.s:110    .text.BusFault_Handler:00000000 BusFault_Handler
/var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccbyT2Nj.s:132    .text.UsageFault_Handler:00000000 $t
/var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccbyT2Nj.s:138    .text.UsageFault_Handler:00000000 UsageFault_Handler
/var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccbyT2Nj.s:160    .text.SVC_Handler:00000000 $t
/var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccbyT2Nj.s:166    .text.SVC_Handler:00000000 SVC_Handler
/var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccbyT2Nj.s:195    .text.DebugMon_Handler:00000000 $t
/var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccbyT2Nj.s:201    .text.DebugMon_Handler:00000000 DebugMon_Handler
/var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccbyT2Nj.s:230    .text.PendSV_Handler:00000000 $t
/var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccbyT2Nj.s:236    .text.PendSV_Handler:00000000 PendSV_Handler
/var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccbyT2Nj.s:265    .text.SysTick_Handler:00000000 $t
/var/folders/g1/j12m_ky910s3_sv7d4yrsdn00000gn/T//ccbyT2Nj.s:271    .text.SysTick_Handler:00000000 SysTick_Handler

UNDEFINED SYMBOLS
HAL_IncTick
